import { useUser, useAuth } from '@clerk/clerk-react' import { useClerkAdmin } from '@/contexts/ClerkAdminContext' import { Button } from '@/components/ui/button' import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar' import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger, } from '@/components/ui/dropdown-menu' import { LogOut, User, Settings, LayoutDashboard } from 'lucide-react' import { useNavigate } from 'react-router-dom' export function ClerkUserProfile() { const { user } = useUser() const { signOut } = useAuth() const { isAdmin, isLoading } = useClerkAdmin() const navigate = useNavigate() console.log('UserProfile Debug:', { user: user?.emailAddresses[0]?.emailAddress, isAdmin, isLoading, userMetadata: user?.publicMetadata }) if (!user || isLoading) { return ( <Button variant="ghost" className="relative h-8 w-8 rounded-full"> <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600"></div> </Button> ) } const getInitials = (firstName: string, lastName: string) => { return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() } const handleNavigate = (path: string) => { navigate(path) } return ( <DropdownMenu> <DropdownMenuTrigger asChild> <Button variant="ghost" className="relative h-8 w-8 rounded-full"> <Avatar className="h-8 w-8"> <AvatarImage src={user.imageUrl} alt={user.fullName || ''} /> <AvatarFallback> {user.firstName && user.lastName ? getInitials(user.firstName, user.lastName) : user.emailAddresses[0]?.emailAddress.charAt(0).toUpperCase() || 'U' } </AvatarFallback> </Avatar> </Button> </DropdownMenuTrigger> <DropdownMenuContent className="w-56" align="end" forceMount> <DropdownMenuLabel className="font-normal"> <div className="flex flex-col space-y-1"> <p className="text-sm font-medium leading-none"> {user.fullName || 'User'} </p> <p className="text-xs leading-none text-muted-foreground"> {user.emailAddresses[0]?.emailAddress} </p> </div> </DropdownMenuLabel> <DropdownMenuSeparator /> {isAdmin && ( <DropdownMenuItem onClick={() => handleNavigate('/admin')}> <LayoutDashboard className="mr-2 h-4 w-4" /> <span>Dashboard</span> </DropdownMenuItem> )} <DropdownMenuItem onClick={() => handleNavigate('/profile')}> <User className="mr-2 h-4 w-4" /> <span>Profile</span> </DropdownMenuItem> <DropdownMenuItem onClick={() => handleNavigate('/settings')}> <Settings className="mr-2 h-4 w-4" /> <span>Settings</span> </DropdownMenuItem> <DropdownMenuSeparator /> <DropdownMenuItem onClick={() => signOut()}> <LogOut className="mr-2 h-4 w-4" /> <span>Log out</span> </DropdownMenuItem> </DropdownMenuContent> </DropdownMenu> ) }