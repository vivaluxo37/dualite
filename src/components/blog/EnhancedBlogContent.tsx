// Enhanced Blog Content Renderer // Supports advanced formatting, SEO structure, and interactive elements import React from 'react' import { motion } from 'framer-motion' import { ChevronRight, Link as LinkIcon, Download, Play, FileText, CheckCircle } from 'lucide-react' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Button } from '@/components/ui/button' import { Badge } from '@/components/ui/badge' import { BlogPostStructure, BlogSection, FAQItem, InternalLink, ExternalLink } from '../../lib/blog-content-formatter' interface EnhancedBlogContentProps { post: BlogPostStructure className?: string } export function EnhancedBlogContent({ post, className = '' }: EnhancedBlogContentProps) { return ( <article className={`max-w-7xl mx-auto ${className}`}> {/* Key Takeaways */} <KeyTakeawaysSection takeaways={post.keyTakeaways} /> {/* Table of Contents */} <TableOfContentsSection toc={post.tableOfContents} /> {/* Main Content */} <div className="prose prose-lg max-w-none"> {post.sections.map((section: BlogSection, index: number) => ( <ContentSection key={section.id} section={section} index={index} /> ))} </div> {/* FAQ Section */} <FAQSection faqItems={post.faq} /> {/* Internal Links */} <RelatedLinksSection internalLinks={post.internalLinks} externalLinks={post.externalLinks} /> {/* Resources */} <ResourcesSection resources={post.downloadableResources} /> {/* Interactive Elements */} <InteractiveElementsSection elements={post.interactiveElements} /> </article> ) } interface KeyTakeawaysSectionProps { takeaways: string[] } function KeyTakeawaysSection({ takeaways }: KeyTakeawaysSectionProps) { return ( <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className="mb-8" > <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200"> <CardHeader> <CardTitle className="flex items-center gap-2 text-blue-900"> <CheckCircle className="h-5 w-5" /> Key Takeaways </CardTitle> </CardHeader> <CardContent> <ul className="space-y-2"> {takeaways.map((takeaway, index) => ( <motion.li key={index} initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: index * 0.1 }} className="flex items-start gap-2" > <ChevronRight className="h-4 w-4 text-blue-600 mt-0.5 flex-shrink-0" /> <span className="text-blue-900">{takeaway}</span> </motion.li> ))} </ul> </CardContent> </Card> </motion.div> ) } interface TableOfContentsSectionProps { toc: Array<{ id: string; title: string; level: number; anchor: string }> } function TableOfContentsSection({ toc }: TableOfContentsSectionProps) { const scrollToSection = (anchor: string) => { const element = document.getElementById(anchor) if (element) { element.scrollIntoView({ behavior: 'smooth', block: 'start' }) } } return ( <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }} className="mb-8" > <Card> <CardHeader> <CardTitle>Table of Contents</CardTitle> </CardHeader> <CardContent> <nav> <ul className="space-y-1"> {toc.map((item, index) => ( <li key={item.id}> <button onClick={() => scrollToSection(item.anchor)} className={`flex items-center gap-2 text-left hover:text-primary transition-colors w-full ${ item.level === 3 ? 'pl-6 text-sm' : 'font-medium' }`} > <span className="text-muted-foreground">{index + 1}.</span> {item.title} </button> </li> ))} </ul> </nav> </CardContent> </Card> </motion.div> ) } interface ContentSectionProps { section: BlogSection index: number } function ContentSection({ section, index }: ContentSectionProps) { const processContent = (content: string) => { // Enhanced markdown processing return content .replace(/\*\*(.*?)\*\*/g, '<span class="font-bold">$1</span>') .replace(/\*(.*?)\*/g, '<span class="italic">$1</span>') .replace(/`([^`]+)`/g, '<code class="bg-muted px-1 py-0.5 rounded text-sm">$1</code>') .replace(/\n\n/g, '</p><p class="mb-4">') } return ( <motion.section id={section.anchor || section.id} initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: index * 0.1 }} className="mb-12 scroll-mt-24" > {section.level === 2 && ( <h2 className="text-3xl font-bold mb-6 text-primary"> {section.title} </h2> )} {section.level === 3 && ( <h3 className="text-2xl font-semibold mb-4 text-primary"> {section.title} </h3> )} <div className="prose prose-lg max-w-none mb-6" dangerouslySetInnerHTML={{ __html: `<p class="mb-4">${processContent(section.content)}</p>` }} /> {section.keyPoints.length > 0 && ( <div className="bg-muted/50 rounded-lg p-4 mb-6"> <h4 className="font-semibold mb-3">Key Points:</h4> <ul className="list-disc list-inside space-y-1"> {section.keyPoints.map((point: string, pointIndex: number) => ( <li key={pointIndex} className="text-sm">{point}</li> ))} </ul> </div> )} {section.images && section.images.length > 0 && ( <div className="grid gap-4 mb-6"> {section.images.map((image: { alt: string; url: string; caption?: string; width?: number; height?: number }, imgIndex: number) => ( <figure key={imgIndex} className="text-center"> <img src={image.url} alt={image.alt} width={image.width || 800} height={image.height || 450} className="rounded-lg mx-auto shadow-lg" loading="lazy" /> {image.caption && ( <figcaption className="text-sm text-muted-foreground mt-2"> {image.caption} </figcaption> )} </figure> ))} </div> )} </motion.section> ) } interface FAQSectionProps { faqItems: FAQItem[] } function FAQSection({ faqItems }: FAQSectionProps) { return ( <motion.section initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.3 }} className="mb-12" > <h2 className="text-3xl font-bold mb-8 text-center">Frequently Asked Questions</h2> <div className="grid gap-6 md:grid-cols-2"> {faqItems.map((faq, index) => ( <motion.div key={index} initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.4 + index * 0.1 }} > <Card className="h-full"> <CardHeader> <CardTitle className="text-lg flex items-start gap-2"> <Badge variant="outline" className="mt-0.5"> Q{index + 1} </Badge> {faq.question} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground">{faq.answer}</p> </CardContent> </Card> </motion.div> ))} </div> </motion.section> ) } interface RelatedLinksSectionProps { internalLinks: InternalLink[] externalLinks: ExternalLink[] } function RelatedLinksSection({ internalLinks, externalLinks }: RelatedLinksSectionProps) { return ( <motion.section initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.4 }} className="mb-12" > <h2 className="text-2xl font-bold mb-6">Additional Resources</h2> <div className="grid gap-6 md:grid-cols-2"> {internalLinks.length > 0 && ( <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <LinkIcon className="h-5 w-5" /> Related Articles </CardTitle> </CardHeader> <CardContent> <ul className="space-y-3"> {internalLinks.map((link, index) => ( <li key={index}> <a href={link.url} className="flex items-center gap-2 text-primary hover:underline" title={link.title} > <ChevronRight className="h-4 w-4" /> {link.text} </a> </li> ))} </ul> </CardContent> </Card> )} {externalLinks.length > 0 && ( <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <LinkIcon className="h-5 w-5" /> Authoritative Sources </CardTitle> </CardHeader> <CardContent> <ul className="space-y-3"> {externalLinks.map((link, index) => ( <li key={index}> <a href={link.url} target="_blank" rel="noopener noreferrer" className="flex items-center gap-2 text-primary hover:underline" title={`${link.source} (Authority: ${link.authority}/10)`} > <ChevronRight className="h-4 w-4" /> {link.text} </a> </li> ))} </ul> </CardContent> </Card> )} </div> </motion.section> ) } interface ResourcesSectionProps { resources: Array<{ title: string description: string type: 'pdf' | 'checklist' | 'cheat-sheet' | 'template' url: string size: string }> } function ResourcesSection({ resources }: ResourcesSectionProps) { return ( <motion.section initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.5 }} className="mb-12" > <h2 className="text-2xl font-bold mb-6">Downloadable Resources</h2> <div className="grid gap-4 md:grid-cols-2"> {resources.map((resource, index) => ( <motion.div key={index} initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.6 + index * 0.1 }} > <Card className="hover:shadow-lg transition-shadow"> <CardContent className="p-6"> <div className="flex items-start gap-4"> <div className="flex-shrink-0"> <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center"> <FileText className="h-6 w-6 text-primary" /> </div> </div> <div className="flex-1"> <h3 className="font-semibold mb-2">{resource.title}</h3> <p className="text-sm text-muted-foreground mb-3"> {resource.description} </p> <div className="flex items-center justify-between"> <Badge variant="outline">{resource.type.toUpperCase()}</Badge> <Button variant="outline" size="sm" asChild> <a href={resource.url} download> <Download className="h-4 w-4 mr-2" /> Download ({resource.size}) </a> </Button> </div> </div> </div> </CardContent> </Card> </motion.div> ))} </div> </motion.section> ) } interface InteractiveElementsSectionProps { elements: Array<{ type: 'quiz' | 'calculator' | 'poll' | 'pattern-quiz' title: string description: string content: any }> } function InteractiveElementsSection({ elements }: InteractiveElementsSectionProps) { return ( <motion.section initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.6 }} className="mb-12" > <h2 className="text-2xl font-bold mb-6">Interactive Learning Tools</h2> <div className="grid gap-6 md:grid-cols-2"> {elements.map((element, index) => ( <motion.div key={index} initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} transition={{ delay: 0.7 + index * 0.1 }} > <Card className="hover:shadow-lg transition-all hover:scale-105"> <CardHeader> <CardTitle className="flex items-center gap-2"> <Play className="h-5 w-5 text-primary" /> {element.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-4">{element.description}</p> <Button className="w-full"> <Play className="h-4 w-4 mr-2" /> Start Interactive Tool </Button> </CardContent> </Card> </motion.div> ))} </div> </motion.section> ) } export default EnhancedBlogContent