import React from 'react'; import { Button } from '@/components/ui/button'; import { ExternalLink as ExternalLinkIcon, Globe } from 'lucide-react'; interface ExternalLinkProps { href: string; children?: React.ReactNode; variant?: 'default' | 'outline' | 'ghost' | 'link'; size?: 'default' | 'sm' | 'lg' | 'icon'; className?: string; showIcon?: boolean; showText?: boolean; iconType?: 'external' | 'globe'; } export function ExternalLink({ href, children = 'Visit Site', variant = 'outline', size = 'sm', className = '', showIcon = true, showText = true, iconType = 'external' }: ExternalLinkProps) { const IconComponent = iconType === 'globe' ? Globe : ExternalLinkIcon; return ( <Button variant={variant} size={size} className={`group ${className}`} asChild > <a href={href} target="_blank" rel="noopener noreferrer sponsored" className="inline-flex items-center gap-2 transition-all duration-200 hover:scale-105" > {showIcon && <IconComponent className="h-4 w-4 group-hover:rotate-12 transition-transform" />} {showText && <span>{children}</span>} {showIcon && showText && ( <span className="sr-only">(opens in new tab)</span> )} </a> </Button> ); } interface AffiliateLinkProps extends ExternalLinkProps { brokerName: string; isAffiliate?: boolean; } export function AffiliateLink({ href, brokerName, isAffiliate = true, children = 'Visit Broker', ...props }: AffiliateLinkProps) { return ( <div className="relative group"> <ExternalLink href={href} children={children} {...props} /> {isAffiliate && ( <div className="absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap"> Affiliate link - we may earn commission </div> )} </div> ); }