import { motion, useInView } from 'framer-motion'; import { useRef, useEffect, useState } from 'react'; import { Users, CheckCircle, Scale, ArrowUp01 } from 'lucide-react'; const stats = [ { value: 100, suffix: '+', label: 'Regulated Brokers', icon: <Scale className="w-8 h-8 text-blue-600" />, color: 'from-blue-500 to-blue-600' }, { value: 50000, suffix: '+', label: 'Traders Matched', icon: <Users className="w-8 h-8 text-green-600" />, color: 'from-green-500 to-green-600' }, { value: 1200, suffix: '+', label: 'Data Points Analyzed', icon: <CheckCircle className="w-8 h-8 text-purple-600" />, color: 'from-purple-500 to-purple-600' }, ]; function AnimatedCounter({ value, suffix = '', duration = 2000 }: { value: number; suffix?: string; duration?: number }) { const [count, setCount] = useState(0); const ref = useRef<HTMLDivElement>(null); const isInView = useInView(ref, { once: true, margin: "-100px" }); useEffect(() => { if (!isInView) return; let startTime: number; let animationFrame: number; const animate = (timestamp: number) => { if (!startTime) startTime = timestamp; const progress = Math.min((timestamp - startTime) / duration, 1); // Easing function for smooth animation const easeOutQuart = 1 - Math.pow(1 - progress, 4); setCount(Math.floor(easeOutQuart * value)); if (progress < 1) { animationFrame = requestAnimationFrame(animate); } }; animationFrame = requestAnimationFrame(animate); return () => cancelAnimationFrame(animationFrame); }, [isInView, value, duration]); return ( <div ref={ref} className="text-4xl md:text-5xl font-bold tracking-tighter"> {count.toLocaleString()}{suffix} </div> ); } export function Stats() { const ref = useRef<HTMLElement>(null); const isInView = useInView(ref, { once: true, margin: "-50px" }); return ( <section ref={ref} className="py-24 bg-gradient-to-br from-gray-50 to-blue-50 relative overflow-hidden"> {/* Background Pattern */} <div className="absolute inset-0 opacity-5"> <div className="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1656926208209-a7528af41f02?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwxfHxhYnN0cmFjdCUyMGdlb21ldHJpYyUyMGdyYWRpZW50JTIwcGF0dGVybnxlbnwwfDB8fGJsdWV8MTc1NzgzOTQ1M3ww&ixlib=rb-4.1.0&q=85')] bg-cover bg-center" style={{width: '100%', height: '100%'}} title="Abstract pattern by Pawel Czerwinski on Unsplash" /> </div> <div className="container mx-auto px-4 relative z-10"> {/* Section Header */} <motion.div className="text-center mb-16" initial={{ opacity: 0, y: 30 }} animate={isInView ? { opacity: 1, y: 0 } : {}} transition={{ duration: 0.6 }} > <h2 className="text-heading mb-4 text-gray-900"> Trusted by Traders Worldwide </h2> <p className="text-subheading text-gray-600 max-w-2xl mx-auto"> Our platform has helped thousands of traders find their perfect broker match </p> </motion.div> {/* Stats Grid */} <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto"> {stats.map((stat, index) => ( <motion.div key={stat.label} initial={{ opacity: 0, y: 50, scale: 0.9 }} animate={isInView ? { opacity: 1, y: 0, scale: 1 } : {}} transition={{ duration: 0.6, delay: index * 0.2, type: "spring", stiffness: 100 }} className="text-center group" > <div className="elevated-card bg-white rounded-3xl p-8 border border-gray-100 group-hover:border-gray-200"> {/* Icon with Gradient Background */} <motion.div className={`w-20 h-20 mx-auto mb-6 rounded-2xl bg-gradient-to-br ${stat.color} flex items-center justify-center shadow-lg`} whileHover={{ scale: 1.1, rotate: 5 }} transition={{ type: "spring", stiffness: 300 }} > <div className="text-white"> {stat.icon} </div> </motion.div> {/* Animated Counter */} <div className="mb-3 text-gray-900"> <AnimatedCounter value={stat.value} suffix={stat.suffix} /> </div> {/* Label */} <p className="text-gray-600 font-medium tracking-wide"> {stat.label} </p> {/* Growth Indicator */} <motion.div className="flex items-center justify-center gap-1 mt-3 text-green-600 text-sm font-medium" initial={{ opacity: 0 }} animate={isInView ? { opacity: 1 } : {}} transition={{ delay: index * 0.2 + 0.8 }} > <ArrowUp01 className="w-4 h-4" /> <span>Growing daily</span> </motion.div> </div> </motion.div> ))} </div> {/* Bottom CTA */} <motion.div className="text-center mt-16" initial={{ opacity: 0, y: 30 }} animate={isInView ? { opacity: 1, y: 0 } : {}} transition={{ duration: 0.6, delay: 0.8 }} > <p className="text-gray-600 text-lg"> Join thousands of successful traders who found their perfect broker </p> </motion.div> </div> </section> ); }