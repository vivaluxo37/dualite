import { Star } from 'lucide-react' import { cn } from '@/utils/cn' interface BrokerRatingProps { rating: number maxRating?: number showValue?: boolean size?: 'sm' | 'md' | 'lg' className?: string } export function BrokerRating({ rating, maxRating = 5, showValue = true, size = 'md', className }: BrokerRatingProps) { const sizeClasses = { sm: 'w-3 h-3', md: 'w-4 h-4', lg: 'w-5 h-5' } const renderStars = () => { const stars = [] const fullStars = Math.floor(rating) const hasHalfStar = rating % 1 !== 0 for (let i = 0; i < fullStars; i++) { stars.push( <Star key={i} className={cn("fill-yellow-400 text-yellow-400", sizeClasses[size])} /> ) } if (hasHalfStar) { stars.push( <Star key="half" className={cn("fill-yellow-400/50 text-yellow-400", sizeClasses[size])} /> ) } const emptyStars = maxRating - Math.ceil(rating) for (let i = 0; i < emptyStars; i++) { stars.push( <Star key={`empty-${i}`} className={cn("text-gray-300", sizeClasses[size])} /> ) } return stars } return ( <div className={cn("flex items-center gap-1", className)}> <div className="flex items-center gap-0.5"> {renderStars()} </div> {showValue && ( <span className={cn( "font-medium", size === 'sm' ? 'text-xs' : size === 'lg' ? 'text-base' : 'text-sm' )}> {rating}/{maxRating} </span> )} </div> ) }