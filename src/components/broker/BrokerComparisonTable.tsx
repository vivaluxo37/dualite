import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table' import { Broker } from './BrokerCard' interface BrokerComparisonTableProps { brokers: Broker[] className?: string } export function BrokerComparisonTable({ brokers, className }: BrokerComparisonTableProps) { return ( <Card className={className}> <CardHeader className="pb-4"> <CardTitle className="text-xl sm:text-2xl">Broker Comparison</CardTitle> </CardHeader> <CardContent className="p-0"> {/* Mobile-friendly responsive table */} <div className="block md:hidden"> {brokers.map((broker) => ( <div key={broker.id} className="border-b border-border p-4 last:border-b-0"> <div className="flex items-center gap-3 mb-3"> {broker.logo && ( <div className="w-10 h-10 bg-muted rounded flex items-center justify-center flex-shrink-0"> <span className="text-sm font-bold" aria-label={`${broker.name} logo`}> {broker.logo} </span> </div> )} <div> <h3 className="font-semibold text-lg">{broker.name}</h3> <div className="flex items-center gap-1" aria-label={`Rating: ${broker.rating} out of 5 stars`}> <span className="font-medium">{broker.rating}</span> <span className="text-muted-foreground">/5</span> </div> </div> </div> <div className="space-y-2 text-sm"> <div className="grid grid-cols-2 gap-2"> <span className="text-muted-foreground">Regulation:</span> <div className="flex flex-wrap gap-1"> {broker.regulation.slice(0, 2).map((reg) => ( <Badge key={reg} variant="secondary" className="text-xs"> {reg} </Badge> ))} {broker.regulation.length > 2 && ( <Badge variant="outline" className="text-xs"> +{broker.regulation.length - 2} </Badge> )} </div> </div> <div className="grid grid-cols-2 gap-2"> <span className="text-muted-foreground">Min Deposit:</span> <span className="font-medium">{broker.minDeposit}</span> </div> <div className="grid grid-cols-2 gap-2"> <span className="text-muted-foreground">Spread:</span> <span className="font-medium">{broker.spread}</span> </div> <div className="grid grid-cols-2 gap-2"> <span className="text-muted-foreground">Leverage:</span> <span className="font-medium">{broker.leverage}</span> </div> <div> <span className="text-muted-foreground block mb-1">Platforms:</span> <div> {broker.platforms.slice(0, 2).join(', ')} {broker.platforms.length > 2 && ( <span className="text-muted-foreground"> +{broker.platforms.length - 2} </span> )} </div> </div> </div> </div> ))} </div> {/* Desktop table */} <div className="hidden md:block overflow-x-auto"> <Table> <TableHeader> <TableRow> <TableHead className="whitespace-nowrap">Broker</TableHead> <TableHead className="whitespace-nowrap">Rating</TableHead> <TableHead className="whitespace-nowrap">Regulation</TableHead> <TableHead className="whitespace-nowrap">Min Deposit</TableHead> <TableHead className="whitespace-nowrap">Spread</TableHead> <TableHead className="whitespace-nowrap">Leverage</TableHead> <TableHead className="whitespace-nowrap">Platforms</TableHead> </TableRow> </TableHeader> <TableBody> {brokers.map((broker) => ( <TableRow key={broker.id} className="hover:bg-muted/50"> <TableCell> <div className="flex items-center gap-2"> {broker.logo && ( <div className="w-8 h-8 bg-muted rounded flex items-center justify-center"> <span className="text-sm font-bold" aria-label={`${broker.name} logo`}> {broker.logo} </span> </div> )} <span className="font-medium">{broker.name}</span> </div> </TableCell> <TableCell> <div className="flex items-center gap-1" aria-label={`Rating: ${broker.rating} out of 5 stars`}> <span className="font-medium">{broker.rating}</span> <span className="text-muted-foreground">/5</span> </div> </TableCell> <TableCell> <div className="flex flex-wrap gap-1"> {broker.regulation.slice(0, 2).map((reg) => ( <Badge key={reg} variant="secondary" className="text-xs"> {reg} </Badge> ))} {broker.regulation.length > 2 && ( <Badge variant="outline" className="text-xs"> +{broker.regulation.length - 2} </Badge> )} </div> </TableCell> <TableCell className="font-medium">{broker.minDeposit}</TableCell> <TableCell className="font-medium">{broker.spread}</TableCell> <TableCell className="font-medium">{broker.leverage}</TableCell> <TableCell> <div className="text-sm"> {broker.platforms.slice(0, 2).join(', ')} {broker.platforms.length > 2 && ( <span className="text-muted-foreground"> +{broker.platforms.length - 2} </span> )} </div> </TableCell> </TableRow> ))} </TableBody> </Table> </div> </CardContent> </Card> ) }