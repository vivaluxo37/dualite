import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Button } from '@/components/ui/button' import { Star, CheckCircle, X, ExternalLink } from 'lucide-react' import { ForexBroker } from '@/data/forex-brokers/broker-types' interface BrokerDetailSectionProps { broker: ForexBroker showNumber?: boolean number?: number } export function BrokerDetailSection({ broker, showNumber = false, number }: BrokerDetailSectionProps) { return ( <Card className="h-full"> <CardHeader className="pb-4"> <div className="flex flex-col sm:flex-row items-start sm:items-center gap-4"> {showNumber && number && ( <div className="w-10 h-10 sm:w-8 sm:h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold text-lg sm:text-base flex-shrink-0"> {number} </div> )} <div className="flex items-center gap-3 w-full"> <div className="w-16 h-16 sm:w-14 sm:h-14 bg-muted rounded-lg flex items-center justify-center flex-shrink-0"> {broker.logo && ( <span className="text-xl sm:text-lg font-bold text-primary" aria-label={`${broker.name} logo`}> {broker.logo} </span> )} </div> <div className="flex-1 min-w-0"> <CardTitle className="text-xl sm:text-lg truncate">{broker.name}</CardTitle> <div className="flex items-center gap-1 mt-1" aria-label={`Rating: ${broker.rating} out of 5 stars`}> <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" aria-hidden="true" /> <span className="font-semibold">{broker.rating}</span> <span className="text-muted-foreground" aria-hidden="true">/5</span> </div> </div> </div> </div> </CardHeader> <CardContent className="space-y-4"> {broker.summary && ( <div className="bg-primary/5 p-4 rounded-lg"> <p className="text-sm font-medium text-primary">{broker.summary}</p> </div> )} <div className="space-y-3"> <div> <h4 className="font-semibold mb-3 text-base">Key Features:</h4> <div className="space-y-2"> {broker.features.slice(0, 3).map((feature, index) => ( <div key={index} className="flex items-start gap-2 text-sm"> <CheckCircle className="w-4 h-4 text-green-500 flex-shrink-0 mt-0.5" /> <span className="leading-relaxed">{feature}</span> </div> ))} </div> </div> <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm"> <div> <span className="text-muted-foreground block mb-1">Regulation:</span> <div className="flex flex-wrap gap-1"> {broker.regulation.slice(0, 2).map((reg) => ( <Badge key={reg} variant="secondary" className="text-xs"> {reg} </Badge> ))} {broker.regulation.length > 2 && ( <Badge variant="outline" className="text-xs"> +{broker.regulation.length - 2} </Badge> )} </div> </div> <div> <span className="text-muted-foreground block mb-1">Min Deposit:</span> <div className="font-medium">{broker.minDeposit}</div> </div> </div> </div> {broker.description && ( <div className="pt-3 border-t"> <p className="text-sm text-muted-foreground leading-relaxed"> {broker.description} </p> </div> )} {(broker.pros || broker.cons) && ( <div className="pt-3 border-t space-y-4"> {broker.pros && broker.pros.length > 0 && ( <div> <h4 className="font-semibold text-green-700 mb-3 text-base">Pros:</h4> <div className="space-y-2"> {broker.pros.slice(0, 3).map((pro, index) => ( <div key={index} className="flex items-start gap-2 text-sm"> <CheckCircle className="w-4 h-4 text-green-500 flex-shrink-0 mt-0.5" /> <span className="leading-relaxed">{pro}</span> </div> ))} </div> </div> )} {broker.cons && broker.cons.length > 0 && ( <div> <h4 className="font-semibold text-red-700 mb-3 text-base">Cons:</h4> <div className="space-y-2"> {broker.cons.slice(0, 2).map((con, index) => ( <div key={index} className="flex items-start gap-2 text-sm"> <X className="w-4 h-4 text-red-500 flex-shrink-0 mt-0.5" /> <span className="leading-relaxed">{con}</span> </div> ))} </div> </div> )} </div> )} <div className="flex flex-col sm:flex-row gap-2 pt-3"> <Button className="w-full sm:flex-1" asChild> <a href={broker.websiteUrl} target="_blank" rel="noopener noreferrer" aria-label={`Get started with ${broker.name} (opens in new tab)`} > Get Started <ExternalLink className="ml-2 w-4 h-4" /> </a> </Button> <Button variant="outline" className="w-full sm:flex-1"> Read Review </Button> </div> </CardContent> </Card> ) }