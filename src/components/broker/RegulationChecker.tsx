import { useState } from 'react' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Button } from '@/components/ui/button' import { Alert, AlertDescription } from '@/components/ui/alert' import { ShieldCheck, Globe, FileSignature, Scale, AlertTriangle, CheckCircle, XCircle, MapPin, Calendar, Users, Building2, Search } from 'lucide-react' interface RegulationDetail { authority: string licenseNumber?: string status: 'Active' | 'Suspended' | 'Revoked' jurisdiction: string leverageLimit: string protectionScheme: string verificationDate: string website?: string } interface RegulationCheckerProps { broker: { name: string regulations?: string[] regulation_tier?: 'tier1' | 'tier2' | 'tier3' | 'unregulated' regulatory_details?: RegulationDetail[] country: string established_year?: number } } export function RegulationChecker({ broker }: RegulationCheckerProps) { const [selectedJurisdiction, setSelectedJurisdiction] = useState<string>('all') const [searchTerm, setSearchTerm] = useState('') const defaultRegulations: RegulationDetail[] = [ { authority: 'FCA', licenseNumber: 'FRN 123456', status: 'Active', jurisdiction: 'United Kingdom', leverageLimit: '1:30 (Retail), 1:500 (Professional)', protectionScheme: 'FSCS - £85,000', verificationDate: '2024-01-15', website: 'https://www.fca.org.uk' }, { authority: 'ASIC', licenseNumber: 'AFSL 123456', status: 'Active', jurisdiction: 'Australia', leverageLimit: '1:30 (Retail), 1:500 (Professional)', protectionScheme: 'FCS - $50,000 AUD', verificationDate: '2024-01-10', website: 'https://www.asic.gov.au' }, { authority: 'CySEC', licenseNumber: '123/15', status: 'Active', jurisdiction: 'Cyprus', leverageLimit: '1:30 (Retail), 1:500 (Professional)', protectionScheme: 'ICF - €20,000', verificationDate: '2024-01-08', website: 'https://www.cysec.gov.cy' } ] const regulations = broker.regulatory_details?.length ? broker.regulatory_details : defaultRegulations const filteredRegulations = regulations.filter(reg => { const matchesJurisdiction = selectedJurisdiction === 'all' || reg.jurisdiction.toLowerCase().includes(selectedJurisdiction.toLowerCase()) const matchesSearch = searchTerm === '' || reg.authority.toLowerCase().includes(searchTerm.toLowerCase()) || reg.licenseNumber?.toLowerCase().includes(searchTerm.toLowerCase()) || reg.jurisdiction.toLowerCase().includes(searchTerm.toLowerCase()) return matchesJurisdiction && matchesSearch }) const jurisdictions = Array.from(new Set(regulations.map(reg => reg.jurisdiction))) const getTierColor = (tier: string) => { switch (tier) { case 'tier1': return 'bg-green-100 text-green-800 ' case 'tier2': return 'bg-blue-100 text-blue-800 ' case 'tier3': return 'bg-yellow-100 text-yellow-800 ' default: return 'bg-red-100 text-red-800 ' } } const getStatusColor = (status: string) => { switch (status) { case 'Active': return 'text-green-600 bg-green-50 ' case 'Suspended': return 'text-yellow-600 bg-yellow-50 ' case 'Revoked': return 'text-red-600 bg-red-50 ' default: return 'text-gray-600 bg-gray-50 ' } } return ( <div className="space-y-6"> {/* Regulatory Overview */} <Card className="border-l-4 border-l-blue-500"> <CardHeader> <CardTitle className="flex items-center gap-2"> <ShieldCheck className="h-5 w-5" /> Regulatory Overview </CardTitle> </CardHeader> <CardContent> <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6"> <div className="text-center p-4 bg-blue-50 rounded-lg"> <div className="text-2xl font-bold text-blue-600">{regulations.length}</div> <div className="text-sm text-muted-foreground">Active Licenses</div> </div> <div className="text-center p-4 bg-green-50 rounded-lg"> <div className="text-2xl font-bold text-green-600">{jurisdictions.length}</div> <div className="text-sm text-muted-foreground">Jurisdictions</div> </div> <div className="text-center p-4 bg-purple-50 rounded-lg"> <div className="text-lg font-bold text-purple-600"> {broker.regulation_tier?.toUpperCase() || 'TIER 1'} </div> <div className="text-sm text-muted-foreground">Regulation Tier</div> </div> <div className="text-center p-4 bg-orange-50 rounded-lg"> <div className="text-2xl font-bold text-orange-600"> {regulations.filter(r => r.status === 'Active').length} </div> <div className="text-sm text-muted-foreground">Active Status</div> </div> </div> <Alert> <ShieldCheck className="h-4 w-4" /> <AlertDescription> <strong>{broker.name}</strong> is regulated by multiple financial authorities, providing strong investor protection and ensuring compliance with international regulatory standards. </AlertDescription> </Alert> </CardContent> </Card> {/* Search and Filter */} <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <Search className="h-5 w-5" /> Search Regulations </CardTitle> </CardHeader> <CardContent> <div className="grid md:grid-cols-2 gap-4"> <div> <label className="block text-sm font-medium mb-2">Search by Authority, License, or Country</label> <div className="relative"> <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" /> <input type="text" placeholder="Search regulations..." value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className="w-full pl-9 p-2 border rounded-lg" /> </div> </div> <div> <label className="block text-sm font-medium mb-2">Filter by Jurisdiction</label> <select value={selectedJurisdiction} onChange={(e) => setSelectedJurisdiction(e.target.value)} className="w-full p-2 border rounded-lg" > <option value="all">All Jurisdictions</option> {jurisdictions.map(jurisdiction => ( <option key={jurisdiction} value={jurisdiction}> {jurisdiction} </option> ))} </select> </div> </div> </CardContent> </Card> {/* Regulatory Details */} <div className="space-y-4"> {filteredRegulations.map((regulation, index) => ( <Card key={index} className="hover:shadow-lg transition-shadow"> <CardHeader> <div className="flex items-start justify-between"> <div className="flex items-center gap-3"> <div className="p-2 bg-primary/10 rounded-lg"> <ShieldCheck className="h-5 w-5" /> </div> <div> <CardTitle className="text-lg">{regulation.authority}</CardTitle> <div className="flex items-center gap-2 mt-1"> <Badge variant="outline">{regulation.jurisdiction}</Badge> <Badge className={getStatusColor(regulation.status)}> {regulation.status} </Badge> </div> </div> </div> {regulation.website && ( <Button variant="outline" size="sm" asChild> <a href={regulation.website} target="_blank" rel="noopener noreferrer"> Verify License <FileSignature className="h-4 w-4 ml-2" /> </a> </Button> )} </div> </CardHeader> <CardContent> <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6"> <div className="space-y-3"> <div className="flex items-center gap-2"> <FileSignature className="h-4 w-4 text-blue-600" /> <span className="text-sm font-medium">License Number:</span> </div> <div className="ml-6"> <span className="font-mono text-sm">{regulation.licenseNumber || 'N/A'}</span> </div> <div className="flex items-center gap-2"> <Calendar className="h-4 w-4 text-green-600" /> <span className="text-sm font-medium">Verified:</span> </div> <div className="ml-6"> <span className="text-sm">{new Date(regulation.verificationDate).toLocaleDateString()}</span> </div> </div> <div className="space-y-3"> <div className="flex items-center gap-2"> <Scale className="h-4 w-4 text-purple-600" /> <span className="text-sm font-medium">Leverage Limit:</span> </div> <div className="ml-6"> <span className="text-sm font-medium">{regulation.leverageLimit}</span> </div> <div className="flex items-center gap-2"> <Users className="h-4 w-4 text-orange-600" /> <span className="text-sm font-medium">Protection:</span> </div> <div className="ml-6"> <span className="text-sm">{regulation.protectionScheme}</span> </div> </div> <div className="space-y-3"> <div className="flex items-center gap-2"> <MapPin className="h-4 w-4 text-red-600" /> <span className="text-sm font-medium">Jurisdiction:</span> </div> <div className="ml-6"> <span className="text-sm">{regulation.jurisdiction}</span> </div> <div className="flex items-center gap-2"> <Building2 className="h-4 w-4 text-indigo-600" /> <span className="text-sm font-medium">Status:</span> </div> <div className="ml-6"> <Badge className={getStatusColor(regulation.status)}> {regulation.status} </Badge> </div> </div> </div> {regulation.status === 'Active' && ( <div className="mt-4 p-3 bg-green-50 rounded-lg"> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm font-medium text-green-900"> This license is active and in good standing </span> </div> </div> )} </CardContent> </Card> ))} </div> {filteredRegulations.length === 0 && ( <Card> <CardContent className="text-center py-8"> <AlertTriangle className="h-12 w-12 text-yellow-500 mx-auto mb-4" /> <h3 className="text-lg font-semibold mb-2">No regulations found</h3> <p className="text-muted-foreground"> No regulations match your search criteria. Try adjusting your filters or search terms. </p> </CardContent> </Card> )} {/* Regulatory Tiers Explanation */} <Card> <CardHeader> <CardTitle>Understanding Regulatory Tiers</CardTitle> </CardHeader> <CardContent> <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4"> <div className="p-4 bg-green-50 rounded-lg"> <h4 className="font-semibold text-green-900 mb-2">Tier 1</h4> <p className="text-sm text-muted-foreground"> Strictest regulations (FCA, ASIC, FINMA). Highest investor protection. </p> </div> <div className="p-4 bg-blue-50 rounded-lg"> <h4 className="font-semibold text-blue-900 mb-2">Tier 2</h4> <p className="text-sm text-muted-foreground"> Well-regulated jurisdictions (CySEC, FSCA). Good investor protection. </p> </div> <div className="p-4 bg-yellow-50 rounded-lg"> <h4 className="font-semibold text-yellow-900 mb-2">Tier 3</h4> <p className="text-sm text-muted-foreground"> Offshore jurisdictions with lighter regulation. Basic protection. </p> </div> <div className="p-4 bg-red-50 rounded-lg"> <h4 className="font-semibold text-red-900 mb-2">Unregulated</h4> <p className="text-sm text-muted-foreground"> No regulatory oversight. Highest risk for traders. </p> </div> </div> </CardContent> </Card> </div> ) }