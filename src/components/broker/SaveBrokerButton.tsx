import React from 'react'; import { useSavedBrokers } from '@/hooks/useSavedBrokers'; import { Button } from '@/components/ui/button'; import { Heart } from 'lucide-react'; interface Broker { id: string; name: string; rating: number; regulation: string; min_deposit: number; spread_eur_usd: number; leverage: string; website_url: string; logo_url?: string; } interface SaveBrokerButtonProps { broker: Broker; variant?: 'default' | 'outline' | 'ghost' | 'destructive' | 'secondary' | 'link'; size?: 'default' | 'sm' | 'lg' | 'icon'; className?: string; showText?: boolean; } export const SaveBrokerButton: React.FC<SaveBrokerButtonProps> = ({ broker, variant = 'outline', size = 'sm', className = '', showText = true, }) => { const { isBrokerSaved, toggleSaveBroker, isSaving, isRemoving } = useSavedBrokers(); const isSaved = isBrokerSaved(broker.id); const isLoading = isSaving || isRemoving; const handleClick = () => { toggleSaveBroker(broker); }; return ( <Button variant={isSaved ? 'default' : variant} size={size} className={`${className} ${isSaved ? 'bg-red-500 hover:bg-red-600' : ''}`} onClick={handleClick} disabled={isLoading} > <Heart className={`h-4 w-4 ${showText ? 'mr-2' : ''} ${isSaved ? 'fill-current' : ''}`} /> {showText && (isSaved ? 'Saved' : 'Save')} </Button> ); };