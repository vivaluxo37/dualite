import { useState } from 'react' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Button } from '@/components/ui/button' import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs' import { Monitor, Smartphone, Globe, CheckCircle, XCircle, Star, Download, ExternalLink, Eye, Settings, Zap, Shield, Database, BarChart3, Code, Cloud } from 'lucide-react' interface PlatformFeature { name: string description: string desktop: boolean web: boolean mobile: boolean } interface PlatformComparisonProps { platforms?: Array<{ name: string type: 'desktop' | 'web' | 'mobile' features?: string[] rating?: number downloadLink?: string webLink?: string }> } export function PlatformComparison({ platforms = [] }: PlatformComparisonProps) { const [selectedTab, setSelectedTab] = useState('overview') const defaultPlatforms = [ { name: 'MetaTrader 4', type: 'desktop' as const, features: ['Advanced Charting', 'Expert Advisors', 'Custom Indicators', 'One-Click Trading', 'Multiple Timeframes'], rating: 4.8, downloadLink: '#' }, { name: 'MetaTrader 5', type: 'desktop' as const, features: ['Advanced Charting', 'Expert Advisors', 'Custom Indicators', 'One-Click Trading', 'Multiple Timeframes', 'Economic Calendar'], rating: 4.6, downloadLink: '#' }, { name: 'Web Platform', type: 'web' as const, features: ['Advanced Charting', 'One-Click Trading', 'Multiple Timeframes', 'Economic Calendar', 'No Download Required'], rating: 4.3, webLink: '#' }, { name: 'Mobile App', type: 'mobile' as const, features: ['Real-time Quotes', 'Charting', 'Order Management', 'Push Notifications', 'Account Management'], rating: 4.4, downloadLink: '#' } ] const displayPlatforms = platforms.length > 0 ? platforms : defaultPlatforms const features: PlatformFeature[] = [ { name: 'Advanced Charting', description: 'Multiple chart types, timeframes, and technical indicators', desktop: true, web: true, mobile: true }, { name: 'Expert Advisors', description: 'Automated trading systems and custom indicators', desktop: true, web: false, mobile: false }, { name: 'One-Click Trading', description: 'Fast order execution with single click', desktop: true, web: true, mobile: true }, { name: 'Custom Indicators', description: 'Create and use custom technical indicators', desktop: true, web: true, mobile: false }, { name: 'Economic Calendar', description: 'Built-in economic events calendar', desktop: true, web: true, mobile: true }, { name: 'Multiple Timeframes', description: 'Chart analysis from 1 minute to monthly', desktop: true, web: true, mobile: true }, { name: 'VPS Compatible', description: 'Virtual Private Server support for automated trading', desktop: true, web: false, mobile: false }, { name: 'API Trading', description: 'Programmatic access for algorithmic trading', desktop: true, web: false, mobile: false }, { name: 'Strategy Tester', description: 'Backtest trading strategies with historical data', desktop: true, web: false, mobile: false }, { name: 'Market Depth', description: 'Level II pricing and market depth information', desktop: true, web: true, mobile: false } ] return ( <div className="space-y-6"> <Tabs value={selectedTab} onValueChange={setSelectedTab}> <TabsList className="grid w-full grid-cols-2"> <TabsTrigger value="overview">Platform Overview</TabsTrigger> <TabsTrigger value="comparison">Feature Comparison</TabsTrigger> </TabsList> <TabsContent value="overview" className="space-y-6"> <div className="grid md:grid-cols-1 lg:grid-cols-2 gap-6"> {displayPlatforms.map((platform, index) => ( <Card key={index} className="hover:shadow-lg transition-shadow"> <CardHeader> <div className="flex items-start justify-between"> <div className="flex items-center gap-3"> <div className="p-2 bg-primary/10 rounded-lg"> {platform.type === 'desktop' && <Monitor className="h-5 w-5" />} {platform.type === 'web' && <Globe className="h-5 w-5" />} {platform.type === 'mobile' && <Smartphone className="h-5 w-5" />} </div> <div> <CardTitle className="text-lg">{platform.name}</CardTitle> <Badge variant="outline" className="mt-1 capitalize"> {platform.type} </Badge> </div> </div> <div className="flex items-center gap-1"> <Star className="h-4 w-4 text-yellow-400 fill-current" /> <span className="font-medium">{platform.rating || 4.5}</span> </div> </div> </CardHeader> <CardContent> <div className="space-y-4"> <p className="text-sm text-muted-foreground"> {platform.type === 'desktop' ? 'Full-featured desktop trading platform with advanced tools and capabilities.' : platform.type === 'web' ? 'Browser-based platform with no download required, accessible from any device.' : 'Mobile trading app for trading on the go with full account management features.'} </p> <div> <h5 className="font-medium mb-2">Key Features</h5> <div className="flex flex-wrap gap-1"> {platform.features?.slice(0, 4).map((feature, featureIndex) => ( <Badge key={featureIndex} variant="secondary" className="text-xs"> {feature} </Badge> ))} {platform.features && platform.features.length > 4 && ( <Badge variant="secondary" className="text-xs"> +{platform.features.length - 4} more </Badge> )} </div> </div> <div className="flex gap-2 pt-2"> {platform.downloadLink && ( <Button variant="outline" size="sm" className="flex-1"> <Download className="h-4 w-4 mr-2" /> Download </Button> )} {platform.webLink && ( <Button variant="outline" size="sm" className="flex-1"> <ExternalLink className="h-4 w-4 mr-2" /> Launch </Button> )} <Button variant="outline" size="sm" className="flex-1"> <Eye className="h-4 w-4 mr-2" /> Preview </Button> </div> </div> </CardContent> </Card> ))} </div> </TabsContent> <TabsContent value="comparison" className="space-y-6"> <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <BarChart3 className="h-5 w-5" /> Feature Comparison Matrix </CardTitle> </CardHeader> <CardContent> <div className="overflow-x-auto"> <table className="w-full text-sm"> <thead> <tr className="border-b"> <th className="text-left p-3 w-48">Feature</th> <th className="text-center p-3 w-32">Desktop</th> <th className="text-center p-3 w-32">Web</th> <th className="text-center p-3 w-32">Mobile</th> <th className="text-left p-3">Description</th> </tr> </thead> <tbody> {features.map((feature, index) => ( <tr key={index} className="border-b hover:bg-muted/50"> <td className="p-3 font-medium">{feature.name}</td> <td className="p-3 text-center"> {feature.desktop ? ( <CheckCircle className="h-5 w-5 text-green-600 mx-auto" /> ) : ( <XCircle className="h-5 w-5 text-red-600 mx-auto" /> )} </td> <td className="p-3 text-center"> {feature.web ? ( <CheckCircle className="h-5 w-5 text-green-600 mx-auto" /> ) : ( <XCircle className="h-5 w-5 text-red-600 mx-auto" /> )} </td> <td className="p-3 text-center"> {feature.mobile ? ( <CheckCircle className="h-5 w-5 text-green-600 mx-auto" /> ) : ( <XCircle className="h-5 w-5 text-red-600 mx-auto" /> )} </td> <td className="p-3 text-muted-foreground">{feature.description}</td> </tr> ))} </tbody> </table> </div> </CardContent> </Card> <div className="grid md:grid-cols-3 gap-6"> <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <Monitor className="h-5 w-5" /> Desktop Platforms </CardTitle> </CardHeader> <CardContent> <div className="space-y-3"> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Most feature-rich</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Advanced charting</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Expert Advisors</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Custom indicators</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">VPS compatible</span> </div> </div> </CardContent> </Card> <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <Globe className="h-5 w-5" /> Web Platform </CardTitle> </CardHeader> <CardContent> <div className="space-y-3"> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">No download required</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Cross-platform</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Basic charting</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">One-click trading</span> </div> <div className="flex items-center gap-2"> <XCircle className="h-4 w-4 text-red-600" /> <span className="text-sm">Limited automation</span> </div> </div> </CardContent> </Card> <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <Smartphone className="h-5 w-5" /> Mobile Apps </CardTitle> </CardHeader> <CardContent> <div className="space-y-3"> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Trade on the go</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Push notifications</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Basic charting</span> </div> <div className="flex items-center gap-2"> <CheckCircle className="h-4 w-4 text-green-600" /> <span className="text-sm">Account management</span> </div> <div className="flex items-center gap-2"> <XCircle className="h-4 w-4 text-red-600" /> <span className="text-sm">Limited features</span> </div> </div> </CardContent> </Card> </div> </TabsContent> </Tabs> </div> ) }