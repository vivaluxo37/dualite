import { Link } from 'react-router-dom' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Home, Search, ArrowLeft } from 'lucide-react' interface NotFoundPageProps { title: string description: string suggestions?: string[] showBackButton?: boolean } export function NotFoundPage({ title, description, suggestions = [], showBackButton = false }: NotFoundPageProps) { const popularPages = [ { name: 'Beginners Forex Brokers', url: '/forex-brokers/trading-types/beginners' }, { name: 'US Forex Brokers', url: '/forex-brokers/regions/usa' }, { name: 'Low Spread Brokers', url: '/forex-brokers/trading-types/low-spread' }, { name: 'MT4 Brokers', url: '/forex-brokers/trading-types/mt4' }, { name: 'Islamic Forex Brokers', url: '/forex-brokers/trading-types/islamic' }, { name: 'Copy Trading', url: '/forex-brokers/trading-types/copy-trading' } ] return ( <div className="min-h-screen bg-background flex items-center justify-center p-4"> <div className="max-w-2xl w-full"> <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }} className="text-center" > {/* 404 Number */} <div className="mb-8"> <motion.div initial={{ scale: 0.8, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} transition={{ duration: 0.5, delay: 0.2 }} className="text-9xl font-bold text-primary" > 404 </motion.div> </div> <Card className="mb-8"> <CardHeader> <CardTitle className="text-2xl text-destructive">{title}</CardTitle> </CardHeader> <CardContent className="space-y-6"> <p className="text-muted-foreground text-lg">{description}</p> {suggestions.length > 0 && ( <div className="text-left space-y-2"> <h3 className="font-semibold text-foreground">Suggestions:</h3> <ul className="list-disc list-inside space-y-1 text-muted-foreground"> {suggestions.map((suggestion, index) => ( <li key={index}>{suggestion}</li> ))} </ul> </div> )} <div className="flex flex-col sm:flex-row gap-3 justify-center"> <Button asChild variant="default" className="flex-1"> <Link to="/" className="flex items-center gap-2"> <Home className="w-4 h-4" /> Back to Home </Link> </Button> {showBackButton && ( <Button onClick={() => window.history.back()} variant="outline" className="flex-1" > <ArrowLeft className="w-4 h-4 mr-2" /> Go Back </Button> )} </div> </CardContent> </Card> {/* Popular Forex Broker Pages */} <Card> <CardHeader> <CardTitle className="flex items-center gap-2"> <Search className="w-5 h-5" /> Popular Forex Broker Pages </CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 sm:grid-cols-2 gap-3"> {popularPages.map((page) => ( <Button key={page.url} asChild variant="ghost" className="justify-start h-auto p-3 text-left" > <Link to={page.url} className="flex items-center gap-2"> <span className="w-2 h-2 bg-primary rounded-full flex-shrink-0"></span> <span>{page.name}</span> </Link> </Button> ))} </div> </CardContent> </Card> {/* Additional Help */} <div className="mt-8 text-center"> <p className="text-sm text-muted-foreground mb-4"> Still can't find what you're looking for? </p> <Button asChild variant="link"> <Link to="/help">Contact Support</Link> </Button> </div> </motion.div> </div> </div> ) }