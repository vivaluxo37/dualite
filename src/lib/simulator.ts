import { Broker } from '@/types'; interface TradeParams { tradeSizeLots: number; pipValue: number; } export class TradingSimulator { static calculateCosts(broker: Broker, params: TradeParams) { const { tradeSizeLots, pipValue } = params; // Calculate Spread Cost const spreadCost = (broker.spreads_avg || 0) * pipValue * tradeSizeLots; // Calculate Commission Cost // Assuming commission_per_lot is for a round turn (buy and sell) const commission = broker.commission_per_lot || 0; const commissionCost = commission * tradeSizeLots; // Calculate Total Cost const totalCost = spreadCost + commissionCost; return { brokerName: broker.name, spreadCost: spreadCost.toFixed(2), commissionCost: commissionCost.toFixed(2), totalCost: totalCost.toFixed(2), }; } } 