export interface ContentDistributionStrategy { id: string; content_id: string; content_type: string; target_audience: any[]; distribution_timeline: any; promotion_channels: any[]; social_media_strategy: any; email_strategy: any; paid_promotion_strategy: any; cross_promotion_plan: any; influencer_outreach_plan: any; performance_tracking: any; budget_allocation: any; risk_mitigation: any[]; created_at: string; updated_at: string; status: 'draft' | 'active' | 'paused' | 'completed'; } export interface PromotionChannel { id: string; name: string; type: 'social_media' | 'email' | 'content_syndication' | 'community' | 'paid'; capabilities: string[]; audience_size: 'small' | 'medium' | 'large'; engagement_rate: 'low' | 'medium' | 'high'; cost_efficiency: 'low' | 'medium' | 'high' | 'very_high'; best_for: string[]; } export interface ContentPerformance { content_id: string; timeframe: string; metrics: { traffic_sources: any; engagement_metrics: any; conversion_metrics: any; social_metrics: any; email_metrics: any; paid_metrics: any; }; roi_analysis: any; recommendations: any[]; last_updated: string; } export interface DistributionAnalytics { strategy_id: string; content_id: string; period: string; channel_performance: Map<string, ChannelPerformance>; audience_insights: AudienceInsights; roi_metrics: ROIMetrics; optimization_opportunities: OptimizationOpportunity[]; generated_at: string; } export interface ChannelPerformance { channel_id: string; metrics: { reach: number; engagement: number; clicks: number; conversions: number; cost: number; roi: number; }; trends: { reach_trend: 'increasing' | 'stable' | 'decreasing'; engagement_trend: 'increasing' | 'stable' | 'decreasing'; cost_trend: 'increasing' | 'stable' | 'decreasing'; }; best_performing_content: string[]; audience_feedback: any[]; } export interface AudienceInsights { demographics: { age_groups: Map<string, number>; gender_distribution: Map<string, number>; locations: Map<string, number>; languages: Map<string, number>; }; interests: string[]; behaviors: { device_usage: Map<string, number>; time_patterns: Map<string, number>; engagement_preferences: Map<string, number>; }; segmentation: { high_value: number; at_risk: number; new: number; loyal: number; }; } export interface ROIMetrics { total_investment: number; total_returns: number; overall_roi: number; channel_roi: Map<string, number>; customer_acquisition_cost: number; lifetime_value: number; payback_period: number; break_even_analysis: { point: string; confidence: number; }; } export interface OptimizationOpportunity { id: string; type: 'budget' | 'targeting' | 'content' | 'timing' | 'channel'; priority: 'low' | 'medium' | 'high' | 'critical'; description: string; expected_impact: { metric: string; improvement: number; confidence: number; }; implementation_effort: 'low' | 'medium' | 'high'; recommended_action: string; timeline: string; }