import { SEO } from '@/components/SEO' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table' import { CheckCircle, Star, ExternalLink, TrendingUp, Zap, Shield, Award, BarChart3, Clock, AlertTriangle } from 'lucide-react' import { BrokerCard } from '@/components/broker/BrokerCard' import { oilTradingData } from '@/data/forex-brokers/trading-types/oil-trading' import { Link } from 'react-router-dom' interface BrokerComparisonData { id: string name: string logo: string rating: number maxRating: number regulation: string[] minDeposit: string spread: string commission: string leverage: string platforms: string[] features: string[] websiteUrl: string oilInstruments: string[] maxLeverage: string executionModel: string usTraders: boolean } const brokerComparisonData: BrokerComparisonData[] = [ { id: 'oil-plus500', name: 'Plus500', logo: 'P500', rating: 5.0, maxRating: 5, regulation: ['FCA', 'CySEC', 'ASIC', 'FMA', 'FSCA', 'FSA', 'MAS'], minDeposit: '$100', spread: 'Variable', commission: 'Built into spread', leverage: '1:300', platforms: ['Proprietary', 'Web'], features: ['2,800+ assets', 'No commissions', 'Global regulation'], websiteUrl: 'https://www.plus500.com', oilInstruments: ['CFDs', 'Futures', 'Options'], maxLeverage: '1:300', executionModel: 'Market Maker', usTraders: true }, { id: 'oil-fpmarkets', name: 'FP Markets', logo: 'FP', rating: 4.9, maxRating: 5, regulation: ['ASIC', 'CMA', 'CySEC', 'FSCA'], minDeposit: '$100', spread: '0.04 points', commission: '$3.00 per lot', leverage: '1:500', platforms: ['MT4', 'MT5', 'cTrader'], features: ['Raw spreads', 'VPS hosting', 'API access'], websiteUrl: 'https://www.fpmarkets.com', oilInstruments: ['CFDs', 'Futures'], maxLeverage: '1:500', executionModel: 'ECN/STP', usTraders: false }, { id: 'oil-eightcap', name: 'Eightcap', logo: '8C', rating: 4.8, maxRating: 5, regulation: ['ASIC', 'CySEC', 'FCA', 'SCB'], minDeposit: '$100', spread: '$0.03', commission: '$3.50 per lot', leverage: '1:500', platforms: ['MT4', 'MT5', 'TradingView'], features: ['FlashTrader plugin', 'AI calendar', 'Social trading'], websiteUrl: 'https://www.eightcap.com', oilInstruments: ['CFDs'], maxLeverage: '1:100 (Oil)', executionModel: 'ECN/STP', usTraders: false }, { id: 'oil-pepperstone', name: 'Pepperstone', logo: 'PS', rating: 4.7, maxRating: 5, regulation: ['ASIC', 'BaFin', 'CMA', 'CySEC', 'DFSA', 'FCA', 'SCB'], minDeposit: '$0', spread: 'Variable', commission: '$3.50 per lot', leverage: '1:500', platforms: ['MT4', 'MT5', 'cTrader', 'TradingView'], features: ['Copy trading', 'Deep liquidity', 'Fast execution'], websiteUrl: 'https://www.pepperstone.com', oilInstruments: ['CFDs', 'Futures'], maxLeverage: '1:500', executionModel: 'NDD', usTraders: false }, { id: 'oil-avatrade', name: 'AvaTrade', logo: 'AVA', rating: 4.3, maxRating: 5, regulation: ['ASIC', 'BVI', 'Central Bank of Ireland', 'FFAJ', 'FSCA', 'KNF', 'MiFID'], minDeposit: '$100', spread: '0.03 points', commission: 'Built into spread', leverage: '1:400', platforms: ['MT4', 'MT5', 'Proprietary'], features: ['Capitalise AI', 'Oil ETFs', 'Multiple platforms'], websiteUrl: 'https://www.avatrade.com', oilInstruments: ['CFDs', 'ETFs', 'Options'], maxLeverage: '1:200 (Oil)', executionModel: 'Market Maker', usTraders: false } ] export default function OilTradingPage() { const structuredData = { "@context": "https://schema.org", "@type": "FinancialService", "name": "Top-Rated Crude Oil Brokers and Trading Platforms 2025", "description": oilTradingData.seo.description, "url": oilTradingData.seo.canonical, "provider": { "@type": "Organization", "name": "BrokerAnalysis", "url": "https://brokeranalysis.com" }, "serviceType": "Investment Service", "areaServed": "Worldwide", "aggregateRating": { "@type": "AggregateRating", "ratingValue": "4.7", "reviewCount": "250" } } const breadcrumbData = { "@context": "https://schema.org", "@type": "BreadcrumbList", "itemListElement": [ { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://brokeranalysis.com" }, { "@type": "ListItem", "position": 2, "name": "Forex Brokers", "item": "https://brokeranalysis.com/forex-brokers" }, { "@type": "ListItem", "position": 3, "name": "Trading Types", "item": "https://brokeranalysis.com/forex-brokers/trading-types" }, { "@type": "ListItem", "position": 4, "name": "Oil Trading Brokers", "item": oilTradingData.seo.canonical } ] } const faqData = { "@context": "https://schema.org", "@type": "FAQPage", "mainEntity": oilTradingData.faqs.map(faq => ({ "@type": "Question", "name": faq.question, "acceptedAnswer": { "@type": "Answer", "text": faq.answer } })) } return ( <> <SEO title={oilTradingData.seo.title} description={oilTradingData.seo.description} keywords={oilTradingData.seo.keywords.join(', ')} canonicalUrl={oilTradingData.seo.canonical} ogImage={`https://brokeranalysis.com/images/crude-oil-brokers.jpg`} structuredData={[structuredData, breadcrumbData, faqData]} /> <div className="min-h-screen bg-background"> {/* Hero Section */} <section className="bg-gradient-to-r from-amber-600 to-orange-600 text-white py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} > <div className="text-center max-w-4xl mx-auto"> <Badge variant="secondary" className="mb-4 text-lg bg-white/20 text-white"> <TrendingUp className="w-4 h-4 mr-2" /> Oil Trading </Badge> <h1 className="text-4xl md:text-6xl font-bold mb-6 tracking-tighter"> {oilTradingData.title} </h1> <p className="text-lg md:text-xl opacity-90 mb-8"> {oilTradingData.subtitle} </p> <div className="flex flex-col sm:flex-row gap-4 justify-center"> <Button size="lg" variant="secondary" asChild> <Link to="/forex-brokers"> <Star className="w-4 h-4 mr-2" /> Browse All Brokers </Link> </Button> <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-amber-700" asChild> <Link to="/ai-match"> <BarChart3 className="w-4 h-4 mr-2" /> Find Oil Broker </Link> </Button> </div> </div> </motion.div> </div> </section> {/* Introduction */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} className="max-w-4xl mx-auto" > <div className="text-center mb-8"> <Badge variant="outline" className="mb-4"> <Clock className="w-4 h-4 mr-2" /> Updated on {oilTradingData.lastUpdated} </Badge> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Why Trade Crude Oil? </h2> </div> <div className="prose prose-lg max-w-none"> {oilTradingData.introduction.split('\n\n').map((paragraph, index) => ( <p key={index} className="text-muted-foreground leading-relaxed mb-4"> {paragraph} </p> ))} </div> </motion.div> </div> </section> {/* Features Overview */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} className="max-w-6xl mx-auto space-y-12" > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Oil Trading Features & Benefits </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Discover the key advantages of trading crude oil with top-rated brokers </p> </div> {oilTradingData.features.map((feature, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-2xl flex items-center gap-3"> {index === 0 && <BarChart3 className="w-6 h-6 text-amber-600" />} {index === 1 && <Zap className="w-6 h-6 text-amber-600" />} {index === 2 && <Shield className="w-6 h-6 text-amber-600" />} {feature.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {feature.description} </p> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {feature.points.map((point, pointIndex) => ( <div key={pointIndex} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-600 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> ))} </motion.div> </div> </section> {/* Getting Started */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> {oilTradingData.gettingStarted?.title} </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Your step-by-step guide to starting crude oil trading </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6"> {oilTradingData.gettingStarted?.steps.map((step, index) => ( <Card key={index} className="relative"> <div className="absolute -top-3 -left-3 w-8 h-8 bg-amber-600 text-white rounded-full flex items-center justify-center font-bold text-sm"> {index + 1} </div> <CardHeader className="pt-6"> <CardTitle className="text-xl">{step.title}</CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-4 text-sm"> {step.description} </p> <ul className="space-y-2"> {step.details.map((detail, detailIndex) => ( <li key={detailIndex} className="text-xs text-muted-foreground flex items-start gap-2"> <CheckCircle className="w-3 h-3 text-green-600 mt-0.5 flex-shrink-0" /> {detail} </li> ))} </ul> </CardContent> </Card> ))} </div> </motion.div> </div> </section> {/* Comparison Table */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Crude Oil Brokers Comparison </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Compare the top brokers for crude oil trading with detailed specifications </p> </div> <div className="overflow-x-auto"> <Table> <TableHeader> <TableRow> <TableHead className="w-48">Broker</TableHead> <TableHead>Rating</TableHead> <TableHead>Min Spread</TableHead> <TableHead>Commission</TableHead> <TableHead>Min Deposit</TableHead> <TableHead>Leverage</TableHead> <TableHead>Oil Instruments</TableHead> <TableHead>US Traders</TableHead> <TableHead className="text-right">Action</TableHead> </TableRow> </TableHeader> <TableBody> {brokerComparisonData.map((broker) => ( <TableRow key={broker.id}> <TableCell> <div className="flex items-center gap-3"> <div className="w-10 h-10 bg-amber-100 rounded-lg flex items-center justify-center"> <span className="font-bold text-sm text-amber-800">{broker.logo}</span> </div> <div> <div className="font-semibold">{broker.name}</div> <div className="text-xs text-muted-foreground"> {broker.regulation.slice(0, 2).join(', ')} </div> </div> </div> </TableCell> <TableCell> <div className="flex items-center gap-1"> <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" /> <span className="font-medium">{broker.rating}</span> <span className="text-muted-foreground text-sm">/{broker.maxRating}</span> </div> </TableCell> <TableCell className="font-medium text-green-600">{broker.spread}</TableCell> <TableCell className="text-sm">{broker.commission}</TableCell> <TableCell className="font-medium">{broker.minDeposit}</TableCell> <TableCell>{broker.leverage}</TableCell> <TableCell> <div className="flex flex-wrap gap-1"> {broker.oilInstruments.slice(0, 2).map((instrument) => ( <Badge key={instrument} variant="secondary" className="text-xs"> {instrument} </Badge> ))} </div> </TableCell> <TableCell> {broker.usTraders ? ( <Badge variant="default" className="bg-green-500">Yes</Badge> ) : ( <Badge variant="secondary">No</Badge> )} </TableCell> <TableCell className="text-right"> <Button size="sm" asChild> <a href={broker.websiteUrl} target="_blank" rel="noopener noreferrer"> Visit Broker <ExternalLink className="w-3 h-3 ml-1" /> </a> </Button> </TableCell> </TableRow> ))} </TableBody> </Table> </div> </motion.div> </div> </section> {/* Top Brokers Grid */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Best Crude Oil Trading Brokers </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Top-rated brokers offering excellent oil trading conditions and platforms </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {brokerComparisonData.map((broker, index) => ( <motion.div key={broker.id} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: index * 0.1 }} > <BrokerCard broker={{ ...broker, description: `${broker.spread} spreads with ${broker.commission}` }} /> </motion.div> ))} </div> </motion.div> </div> </section> {/* Key Features */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> {oilTradingData.keyFeatures?.title} </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Understanding the crude oil market and trading dynamics </p> </div> <div className="grid grid-cols-1 lg:grid-cols-3 gap-8"> {oilTradingData.keyFeatures?.features.map((feature, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-xl flex items-center gap-3"> {index === 0 && <BarChart3 className="w-5 h-5 text-amber-600" />} {index === 1 && <Clock className="w-5 h-5 text-amber-600" />} {index === 2 && <AlertTriangle className="w-5 h-5 text-amber-600" />} {feature.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-4"> {feature.description} </p> <ul className="space-y-2"> {feature.details.map((detail, detailIndex) => ( <li key={detailIndex} className="text-sm text-muted-foreground flex items-start gap-2"> <CheckCircle className="w-4 h-4 text-green-600 mt-0.5 flex-shrink-0" /> {detail} </li> ))} </ul> </CardContent> </Card> ))} </div> </motion.div> </div> </section> {/* Risk Warning */} <section className="py-16 bg-amber-50 border-y border-amber-200"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="border-amber-200"> <CardContent className="p-6"> <div className="flex items-start gap-4"> <AlertTriangle className="w-6 h-6 text-amber-600 mt-1 flex-shrink-0" /> <div> <h3 className="text-lg font-semibold text-amber-800 mb-2">Risk Warning</h3> <p className="text-sm text-amber-700"> 75-95% of traders on margin lose money. Trading crude oil involves significant risk due to high volatility and leverage. Oil prices are influenced by geopolitical events, supply disruptions, and economic data. Only trade with capital you can afford to lose. Past performance is not indicative of future results. </p> </div> </div> </CardContent> </Card> </motion.div> </div> </section> {/* FAQ Section */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Frequently Asked Questions </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Everything you need to know about crude oil trading </p> </div> <div className="max-w-4xl mx-auto space-y-4"> {oilTradingData.faqs.slice(0, 6).map((faq, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-xl">{faq.question}</CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground">{faq.answer}</p> </CardContent> </Card> ))} </div> <div className="text-center mt-8"> <Button variant="outline" asChild> <Link to="/faq"> View All FAQs <ExternalLink className="w-4 h-4 ml-2" /> </Link> </Button> </div> </motion.div> </div> </section> {/* Recommendations */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> {oilTradingData.recommendations?.title} </h2> </div> <div className="max-w-4xl mx-auto"> <Card> <CardContent className="p-8"> <div className="grid grid-cols-1 md:grid-cols-2 gap-6"> {oilTradingData.recommendations?.content.map((recommendation, index) => ( <div key={index} className="flex items-start gap-3"> <Award className="w-5 h-5 text-amber-600 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{recommendation}</p> </div> ))} </div> </CardContent> </Card> </div> </motion.div> </div> </section> {/* Conclusion */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="bg-gradient-to-r from-amber-600 to-orange-600 text-white"> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6">{oilTradingData.conclusion.title}</h2> <div className="space-y-4 mb-8"> {oilTradingData.conclusion.content.map((paragraph, index) => ( <p key={index} className="leading-relaxed"> {paragraph} </p> ))} </div> <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" variant="secondary" asChild> <Link to="/forex-brokers"> <Star className="w-4 h-4 mr-2" /> Browse All Brokers </Link> </Button> <Button size="lg" variant="secondary" asChild> <Link to="/ai-match"> <TrendingUp className="w-4 h-4 mr-2" /> Find Oil Trading Broker </Link> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> {/* Related Pages */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Related Broker Categories </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Explore other specialized broker categories </p> </div> <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto"> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">Commodity Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Trade gold, silver, oil, and other commodities </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/commodities">View Commodity Brokers</Link> </Button> </CardContent> </Card> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">CFD Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Best brokers for Contract for Difference trading </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/cfd">View CFD Brokers</Link> </Button> </CardContent> </Card> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">ECN Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Direct market access with institutional pricing </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/ecn">View ECN Brokers</Link> </Button> </CardContent> </Card> </div> </motion.div> </div> </section> </div> </> ) }