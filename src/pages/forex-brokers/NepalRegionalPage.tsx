import { SEO } from '@/components/SEO' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table' import { CheckCircle, Star, Globe, TrendingUp, Clock, AlertTriangle, Users, BookOpen, Target, ExternalLink, Info } from 'lucide-react' import { BrokerCard, BrokerFAQ } from '@/components/broker' import { RegionData } from '@/data/forex-brokers/regions/types' import { Link } from 'react-router-dom' interface NepalRegionalPageProps { data: RegionData } export default function NepalRegionalPage({ data }: NepalRegionalPageProps) { // Add error handling for missing data if (!data) { return ( <div className="min-h-screen bg-background flex items-center justify-center"> <div className="text-center"> <h1 className="text-2xl font-bold mb-4">Error Loading Page</h1> <p className="text-muted-foreground">Unable to load Nepal forex brokers data. Please try again later.</p> </div> </div> ) } const structuredData = { "@context": "https://schema.org", "@type": "Product", "name": data.seo?.title || "Top Forex Brokers in Nepal", "description": data.seo?.description || "Discover the top forex brokers for Nepali traders", "url": data.seo?.canonical || "https://brokeranalysis.com/forex-brokers/regions/nepal", "brand": { "@type": "Brand", "name": "Dualite" }, "aggregateRating": { "@type": "AggregateRating", "ratingValue": "4.8", "reviewCount": "250" }, "offers": { "@type": "Offer", "price": "0", "priceCurrency": "USD" } } const breadcrumbData = { "@context": "https://schema.org", "@type": "BreadcrumbList", "itemListElement": [ { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://brokeranalysis.com" }, { "@type": "ListItem", "position": 2, "name": "Forex Brokers", "item": "https://brokeranalysis.com/forex-brokers" }, { "@type": "ListItem", "position": 3, "name": "Regional", "item": "https://brokeranalysis.com/forex-brokers/regions" }, { "@type": "ListItem", "position": 4, "name": data.title || "Top Forex Brokers in Nepal", "item": data.seo?.canonical || "https://brokeranalysis.com/forex-brokers/regions/nepal" } ] } const faqData = { "@context": "https://schema.org", "@type": "FAQPage", "mainEntity": (data.faqs || []).map(faq => ({ "@type": "Question", "name": faq.question, "acceptedAnswer": { "@type": "Answer", "text": faq.answer } })) } return ( <> <SEO title={data.seo?.title || "Top Forex Brokers in Nepal 2025"} description={data.seo?.description || "Discover the top forex brokers for Nepali traders in 2025"} keywords={(data.seo?.keywords || []).join(', ')} canonicalUrl={data.seo?.canonical || "https://brokeranalysis.com/forex-brokers/regions/nepal"} ogImage={`https://brokeranalysis.com/images/forex-brokers-regional/nepal.jpg`} structuredData={[structuredData, breadcrumbData, faqData]} /> <div className="min-h-screen bg-background"> {/* Hero Section */} <section className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} > <div className="text-center max-w-4xl mx-auto"> <Badge variant="secondary" className="mb-4 text-lg"> <Globe className="w-4 h-4 mr-2" /> {data.name} </Badge> <h1 className="text-4xl md:text-6xl font-bold mb-6 tracking-tighter"> {data.title} </h1> <p className="text-lg md:text-xl opacity-90 mb-4"> {data.subtitle} </p> <p className="text-sm opacity-75 mb-8"> Last updated: {data.lastUpdated} </p> </div> </motion.div> </div> </section> {/* Introduction */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">Introduction to Forex Trading in Nepal</CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.introduction.split('\n\n').map((paragraph, index) => ( <p key={index} className="mb-4 text-muted-foreground"> {paragraph} </p> ))} </div> <div className="flex flex-wrap gap-4 mt-6"> <Button asChild> <Link to="/ai-match"> <Target className="w-4 h-4 mr-2" /> Find Your Perfect Broker </Link> </Button> <Button variant="outline" asChild> <Link to="/forex-brokers"> <TrendingUp className="w-4 h-4 mr-2" /> Browse All Brokers </Link> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> {/* Legal Status */} {data.legalStatus && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <AlertTriangle className="w-6 h-6 text-amber-500" /> {data.legalStatus.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground leading-relaxed"> {data.legalStatus.content} </p> </CardContent> </Card> </motion.div> </div> </section> )} {/* Top Brokers Grid */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Top Forex Brokers in Nepal </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Compare the best forex brokers available for Nepali traders with competitive conditions and reliable service </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {data.brokers.map((broker, index) => ( <motion.div key={broker.id} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: index * 0.1 }} > <BrokerCard broker={broker} /> </motion.div> ))} </div> </motion.div> </div> </section> {/* Comparison Table */} {data.comparisonTable && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> {data.comparisonTable.title} </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Detailed comparison of trading conditions and features offered by top brokers in Nepal </p> </div> <div className="overflow-x-auto"> <Table> <TableHeader> <TableRow> {data.comparisonTable.headers.map((header, index) => ( <TableHead key={index} className="text-center font-semibold"> {header} </TableHead> ))} </TableRow> </TableHeader> <TableBody> {data.comparisonTable.rows.map((row, rowIndex) => ( <TableRow key={rowIndex}> {data.comparisonTable!.headers.map((header, colIndex) => { const key = header.toLowerCase().replace(/\s+/g, '') const value = row[key as keyof typeof row] || row.feature || 'N/A' return ( <TableCell key={colIndex} className="text-center"> {value} </TableCell> ) })} </TableRow> ))} </TableBody> </Table> </div> </motion.div> </div> </section> )} {/* Trading Apps Features */} {data.tradingApps && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <Users className="w-6 h-6" /> {data.tradingApps.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {data.tradingApps.description} </p> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {data.tradingApps.features.map((feature, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-lg">{feature.title}</CardTitle> </CardHeader> <CardContent> <p className="text-sm text-muted-foreground"> {feature.description} </p> </CardContent> </Card> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Getting Started */} {data.gettingStarted && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <BookOpen className="w-6 h-6" /> {data.gettingStarted.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {data.gettingStarted.introduction} </p> <div className="space-y-6"> {data.gettingStarted.sections.map((section, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-lg">{section.title}</CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground leading-relaxed"> {section.content} </p> </CardContent> </Card> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Trading Hours */} {data.tradingHours && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <Clock className="w-6 h-6" /> {data.tradingHours.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground leading-relaxed"> {data.tradingHours.content} </p> </CardContent> </Card> </motion.div> </div> </section> )} {/* Risk Management */} {data.riskManagement && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <AlertTriangle className="w-6 h-6 text-red-500" /> {data.riskManagement.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {data.riskManagement.introduction} </p> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {data.riskManagement.risks.map((risk, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-lg">{risk.title}</CardTitle> </CardHeader> <CardContent> <p className="text-sm text-muted-foreground"> {risk.description} </p> </CardContent> </Card> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Key Points */} {data.keyPoints && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">Key Points for Nepali Traders</CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {data.keyPoints.map((point, index) => ( <div key={index} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* FAQ */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerFAQ faqs={data.faqs} /> </motion.div> </div> </section> {/* Final Thoughts */} {data.finalThoughts && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground"> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6">{data.finalThoughts.title}</h2> <div className="space-y-4 mb-8"> {data.finalThoughts.content.map((paragraph, index) => ( <p key={index} className="opacity-90 leading-relaxed"> {paragraph} </p> ))} </div> {data.finalThoughts.relatedPages && ( <div className="mb-6"> <h3 className="text-lg font-semibold mb-3">You might also be interested in:</h3> <div className="flex flex-wrap gap-2"> {data.finalThoughts.relatedPages.map((page, index) => ( <Badge key={index} variant="secondary" className="text-sm"> <Info className="w-3 h-3 mr-1" /> {page} </Badge> ))} </div> </div> )} <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" variant="secondary" asChild> <Link to="/forex-brokers"> <TrendingUp className="w-4 h-4 mr-2" /> Compare All Brokers </Link> </Button> <Button size="lg" variant="outline" asChild> <Link to="/ai-match"> <Target className="w-4 h-4 mr-2" /> AI Broker Match </Link> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Conclusion */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6">{data.conclusion.title}</h2> <div className="space-y-4 mb-8"> {data.conclusion.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground leading-relaxed"> {paragraph} </p> ))} </div> <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" asChild> <Link to="/ai-match"> <Star className="w-4 h-4 mr-2" /> Start AI Broker Match </Link> </Button> <Button size="lg" variant="outline" asChild> <a href={data.brokers[0]?.websiteUrl} target="_blank" rel="noopener noreferrer"> <ExternalLink className="w-4 h-4 mr-2" /> Visit Top Broker </a> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> </div> </> ) }