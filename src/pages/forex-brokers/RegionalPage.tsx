import { SEO } from '@/components/SEO' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { CheckCircle, Star, Globe, Shield, TrendingUp } from 'lucide-react' import { BrokerCard, BrokerComparisonTable, BrokerFeatures, BrokerFAQ, BrokerRating } from '@/components/broker' import { RegionalData } from '@/data/forex-brokers' import { FeatureIcons } from '@/components/broker' interface RegionalPageProps { data: RegionalData } export default function RegionalPage({ data }: RegionalPageProps) { const structuredData = { "@context": "https://schema.org", "@type": "Product", "name": data.seo.title, "description": data.seo.description, "url": data.seo.canonical, "brand": { "@type": "Brand", "name": "Dualite" }, "aggregateRating": { "@type": "AggregateRating", "ratingValue": "4.5", "reviewCount": "100" }, "offers": { "@type": "Offer", "price": "0", "priceCurrency": "USD" } } const breadcrumbData = { "@context": "https://schema.org", "@type": "BreadcrumbList", "itemListElement": [ { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://brokeranalysis.com" }, { "@type": "ListItem", "position": 2, "name": "Forex Brokers", "item": "https://brokeranalysis.com/forex-brokers" }, { "@type": "ListItem", "position": 3, "name": data.title, "item": data.seo.canonical } ] } const faqData = { "@context": "https://schema.org", "@type": "FAQPage", "mainEntity": data.faqs.map(faq => ({ "@type": "Question", "name": faq.question, "acceptedAnswer": { "@type": "Answer", "text": faq.answer } })) } return ( <> <SEO title={data.seo.title} description={data.seo.description} keywords={data.seo.keywords.join(', ')} canonicalUrl={data.seo.canonical} ogImage={`https://brokeranalysis.com/images/forex-brokers-regional/${data.id}.jpg`} structuredData={[structuredData, breadcrumbData, faqData]} /> <div className="min-h-screen bg-background"> {/* Hero Section */} <section className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} > <div className="text-center max-w-4xl mx-auto"> <Badge variant="secondary" className="mb-4 text-lg"> <Globe className="w-4 h-4 mr-2" /> {data.country} </Badge> <h1 className="text-4xl md:text-6xl font-bold mb-6 tracking-tighter"> {data.title} </h1> <p className="text-lg md:text-xl opacity-90 mb-8"> {data.subtitle} </p> </div> </motion.div> </div> </section> {/* Key Points */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">Key Points for {data.country} Traders</CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {data.keyPoints?.map((point, index) => ( <div key={index} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> {/* Top Brokers Grid */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Top {data.country} Forex Brokers </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Compare the best forex brokers available in {data.country} </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {data.brokers.map((broker, index) => ( <motion.div key={broker.id} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: index * 0.1 }} > <BrokerCard broker={broker} /> </motion.div> ))} </div> </motion.div> </div> </section> {/* Comparison Table */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerComparisonTable brokers={data.brokers} /> </motion.div> </div> </section> {/* Key Features */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerFeatures features={[ { icon: FeatureIcons.shield, title: 'Regulated & Secure', description: 'All brokers are strictly regulated with maximum security' }, { icon: FeatureIcons.star, title: 'Competitive Conditions', description: 'Low spreads and competitive trading conditions' }, { icon: FeatureIcons.globe, title: 'Local Support', description: 'Customer support and services tailored for local traders' }, { icon: FeatureIcons.zap, title: 'Fast Execution', description: 'Reliable trade execution with minimal slippage' } ]} /> </motion.div> </div> </section> {/* FAQ */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerFAQ faqs={data.faqs} /> </motion.div> </div> </section> {/* Conclusion */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground"> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6">{data.conclusion.title}</h2> <div className="space-y-4 mb-8"> {data.conclusion.content.map((paragraph, index) => ( <p key={index} className="opacity-90"> {paragraph} </p> ))} </div> <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" variant="secondary" asChild> <a href="/forex-brokers"> <TrendingUp className="w-4 h-4 mr-2" /> Compare All Brokers </a> </Button> <Button size="lg" variant="outline" asChild> <a href="/ai-match"> <Star className="w-4 h-4 mr-2" /> AI Broker Match </a> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> </div> </> ) }