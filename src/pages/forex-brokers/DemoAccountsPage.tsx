import { SEO } from '@/components/SEO' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table' import { CheckCircle, Star, ExternalLink, Monitor, Book, GraduationCap, Shield, Award } from 'lucide-react' import { BrokerCard } from '@/components/broker/BrokerCard' import { demoAccountsTradingTypeData } from '@/data/forex-brokers/trading-types/demo-accounts' import { Link } from 'react-router-dom' interface BrokerComparisonData { id: string name: string logo: string rating: number maxRating: number regulation: string[] minDeposit: string spread: string leverage: string platforms: string[] features: string[] websiteUrl: string demoFeatures: string[] timeLimit: string } const brokerComparisonData: BrokerComparisonData[] = [ { id: 'demo-fxtm', name: 'FXTM', logo: 'FXTM', rating: 5.0, maxRating: 5, regulation: ['FCA', 'CySEC', 'FSC Mauritius'], minDeposit: '$200', spread: '0.1 pips', leverage: '1:500', platforms: ['MT4', 'MT5', 'Proprietary'], features: ['High leverage', 'Fast execution', 'Educational content'], websiteUrl: 'https://www.forextime.com', demoFeatures: ['Unlimited', 'Customizable', 'All features'], timeLimit: 'Unlimited' }, { id: 'demo-fpmarkets', name: 'FP Markets', logo: 'FP', rating: 4.9, maxRating: 5, regulation: ['ASIC', 'CySEC', 'FSCA'], minDeposit: '$100', spread: '1.2 pips', leverage: '1:500', platforms: ['MT4', 'MT5', 'cTrader'], features: ['ECN trading', 'Low fees', 'Research tools'], websiteUrl: 'https://www.fpmarkets.com', demoFeatures: ['30 days', 'Extendable', 'All platforms'], timeLimit: '30 days' }, { id: 'demo-eightcap', name: 'Eightcap', logo: 'EC', rating: 4.8, maxRating: 5, regulation: ['ASIC', 'CySEC', 'FCA'], minDeposit: '$100', spread: '1.0 pips', leverage: '1:500', platforms: ['MT4', 'MT5', 'Trading View'], features: ['Low fees', 'Education', 'Advanced tools'], websiteUrl: 'https://www.eightcap.com', demoFeatures: ['30 days', 'Upgradable', 'Strategy content'], timeLimit: '30 days' }, { id: 'demo-blackbull', name: 'BlackBull Markets', logo: 'BB', rating: 4.7, maxRating: 5, regulation: ['FMA', 'FSA'], minDeposit: '$0', spread: '1.3 pips', leverage: '1:500', platforms: ['MT4', 'MT5', 'cTrader'], features: ['No min deposit', 'Low fees', 'Deep liquidity'], websiteUrl: 'https://www.blackbullmarkets.com', demoFeatures: ['Unlimited', 'Education', 'ECN simulation'], timeLimit: 'Unlimited' }, { id: 'demo-avatrade', name: 'AvaTrade', logo: 'AVA', rating: 4.5, maxRating: 5, regulation: ['ASIC', 'BVI', 'Central Bank of Ireland'], minDeposit: '$100', spread: '0.9 pips', leverage: '1:500', platforms: ['MT4', 'MT5', 'Proprietary'], features: ['Regulated', 'Education', 'Multiple platforms'], websiteUrl: 'https://www.avatrade.com', demoFeatures: ['$100,000 virtual', 'Seamless switching', 'AvaAcademy'], timeLimit: 'Unlimited' } ] export default function DemoAccountsPage() { const structuredData = { "@context": "https://schema.org", "@type": "FinancialService", "name": "Best Forex Demo Accounts 2025", "description": demoAccountsTradingTypeData.seo.description, "url": demoAccountsTradingTypeData.seo.canonical, "provider": { "@type": "Organization", "name": "BrokerAnalysis", "url": "https://brokeranalysis.com" }, "serviceType": "Investment Service", "areaServed": "Worldwide", "aggregateRating": { "@type": "AggregateRating", "ratingValue": "4.8", "reviewCount": "300" } } const breadcrumbData = { "@context": "https://schema.org", "@type": "BreadcrumbList", "itemListElement": [ { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://brokeranalysis.com" }, { "@type": "ListItem", "position": 2, "name": "Forex Brokers", "item": "https://brokeranalysis.com/forex-brokers" }, { "@type": "ListItem", "position": 3, "name": "Trading Types", "item": "https://brokeranalysis.com/forex-brokers/trading-types" }, { "@type": "ListItem", "position": 4, "name": "Demo Accounts", "item": demoAccountsTradingTypeData.seo.canonical } ] } const faqData = { "@context": "https://schema.org", "@type": "FAQPage", "mainEntity": demoAccountsTradingTypeData.faqs.map(faq => ({ "@type": "Question", "name": faq.question, "acceptedAnswer": { "@type": "Answer", "text": faq.answer } })) } return ( <> <SEO title={demoAccountsTradingTypeData.seo.title} description={demoAccountsTradingTypeData.seo.description} keywords={demoAccountsTradingTypeData.seo.keywords.join(', ')} canonicalUrl={demoAccountsTradingTypeData.seo.canonical} ogImage={`https://brokeranalysis.com/images/demo-accounts-forex-brokers.jpg`} structuredData={[structuredData, breadcrumbData, faqData]} /> <div className="min-h-screen bg-background"> {/* Hero Section */} <section className="bg-gradient-to-r from-primary to-primary/90 text-white py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} > <div className="text-center max-w-4xl mx-auto"> <Badge variant="secondary" className="mb-4 text-lg"> <Monitor className="w-4 h-4 mr-2" /> Demo Account Trading </Badge> <h1 className="text-4xl md:text-6xl font-bold mb-6 tracking-tighter"> {demoAccountsTradingTypeData.title} </h1> <p className="text-lg md:text-xl opacity-90 mb-8"> {demoAccountsTradingTypeData.subtitle} </p> </div> </motion.div> </div> </section> {/* Introduction */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} className="max-w-4xl mx-auto" > <div className="prose prose-lg max-w-none"> {demoAccountsTradingTypeData.introduction.split('\n\n').map((paragraph, index) => ( <p key={index} className="text-muted-foreground leading-relaxed mb-4"> {paragraph} </p> ))} </div> </motion.div> </div> </section> {/* Features Overview */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} className="max-w-6xl mx-auto space-y-12" > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Why Choose Demo Account Trading? </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Discover the key benefits of risk-free demo trading </p> </div> {demoAccountsTradingTypeData.features.map((feature, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-2xl flex items-center gap-3"> {index === 0 && <Monitor className="w-6 h-6 text-primary" />} {index === 1 && <Book className="w-6 h-6 text-primary" />} {index === 2 && <GraduationCap className="w-6 h-6 text-primary" />} {feature.title} </CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {feature.description} </p> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {feature.points.map((point, pointIndex) => ( <div key={pointIndex} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> ))} </motion.div> </div> </section> {/* Comparison Table */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Best Demo Accounts Comparison </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Compare the top forex brokers offering the best demo account features </p> </div> <div className="overflow-x-auto"> <Table> <TableHeader> <TableRow> <TableHead className="w-48">Broker</TableHead> <TableHead>Rating</TableHead> <TableHead>Min Deposit</TableHead> <TableHead>Time Limit</TableHead> <TableHead>Leverage</TableHead> <TableHead>Key Demo Features</TableHead> <TableHead>Platforms</TableHead> <TableHead className="text-right">Action</TableHead> </TableRow> </TableHeader> <TableBody> {brokerComparisonData.map((broker) => ( <TableRow key={broker.id}> <TableCell> <div className="flex items-center gap-3"> <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center"> <span className="font-bold text-xs">{broker.logo.substring(0, 2)}</span> </div> <div> <div className="font-semibold">{broker.name}</div> <div className="text-xs text-muted-foreground"> {broker.regulation.slice(0, 2).join(', ')} </div> </div> </div> </TableCell> <TableCell> <div className="flex items-center gap-1"> <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" /> <span className="font-medium">{broker.rating}</span> <span className="text-muted-foreground text-sm">/{broker.maxRating}</span> </div> </TableCell> <TableCell className="font-medium">{broker.minDeposit}</TableCell> <TableCell> <Badge variant={broker.timeLimit === 'Unlimited' ? 'default' : 'secondary'}> {broker.timeLimit} </Badge> </TableCell> <TableCell>{broker.leverage}</TableCell> <TableCell> <div className="flex flex-wrap gap-1"> {broker.demoFeatures.slice(0, 2).map((feature) => ( <Badge key={feature} variant="secondary" className="text-xs"> {feature} </Badge> ))} </div> </TableCell> <TableCell> <div className="flex flex-wrap gap-1"> {broker.platforms.slice(0, 2).map((platform) => ( <Badge key={platform} variant="secondary" className="text-xs"> {platform} </Badge> ))} </div> </TableCell> <TableCell className="text-right"> <Button size="sm" asChild> <a href={broker.websiteUrl} target="_blank" rel="noopener noreferrer"> Visit Broker <ExternalLink className="w-3 h-3 ml-1" /> </a> </Button> </TableCell> </TableRow> ))} </TableBody> </Table> </div> </motion.div> </div> </section> {/* Top Brokers Grid */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Best Demo Account Forex Brokers </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Top-rated brokers offering excellent demo trading experiences </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {demoAccountsTradingTypeData.brokers.map((broker, index) => ( <motion.div key={broker.id} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: index * 0.1 }} > <BrokerCard broker={{ ...broker, description: `${broker.spread} spreads with demo account features` }} /> </motion.div> ))} </div> </motion.div> </div> </section> {/* Key Benefits */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Benefits of Demo Trading </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Why demo accounts are essential for trading success </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6"> {[ { icon: <Monitor className="w-8 h-8 text-primary" />, title: "Risk-Free Practice", description: "Learn and practice trading without risking real money" }, { icon: <Book className="w-8 h-8 text-primary" />, title: "Platform Familiarization", description: "Master trading platforms and tools before going live" }, { icon: <Shield className="w-8 h-8 text-primary" />, title: "Strategy Testing", description: "Test and refine trading strategies in realistic conditions" }, { icon: <Award className="w-8 h-8 text-primary" />, title: "Educational Tool", description: "Perfect for beginners to learn market dynamics" } ].map((benefit, index) => ( <Card key={index} className="text-center"> <CardContent className="p-6"> <div className="flex justify-center mb-4"> {benefit.icon} </div> <h3 className="font-semibold text-lg mb-2">{benefit.title}</h3> <p className="text-sm text-muted-foreground">{benefit.description}</p> </CardContent> </Card> ))} </div> </motion.div> </div> </section> {/* FAQ Section */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Frequently Asked Questions </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Everything you need to know about forex demo accounts </p> </div> <div className="max-w-4xl mx-auto space-y-4"> {demoAccountsTradingTypeData.faqs.map((faq, index) => ( <Card key={index}> <CardHeader> <CardTitle className="text-xl">{faq.question}</CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground">{faq.answer}</p> </CardContent> </Card> ))} </div> </motion.div> </div> </section> {/* Conclusion */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="bg-gradient-to-r from-primary to-primary/90 text-white"> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6 text-foreground">{demoAccountsTradingTypeData.conclusion.title}</h2> <div className="space-y-4 mb-8"> {demoAccountsTradingTypeData.conclusion.content.map((paragraph, index) => ( <p key={index} className="text-foreground leading-relaxed"> {paragraph} </p> ))} </div> <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" variant="secondary" asChild> <Link to="/forex-brokers"> <Star className="w-4 h-4 mr-2" /> Browse All Brokers </Link> </Button> <Button size="lg" variant="secondary" asChild> <Link to="/ai-match"> <Monitor className="w-4 h-4 mr-2" /> Find Demo Account Broker </Link> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> {/* Related Pages */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Related Broker Categories </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Explore other specialized broker categories </p> </div> <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto"> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">Beginner Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Brokers specifically designed for new traders </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/beginners">View Beginner Brokers</Link> </Button> </CardContent> </Card> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">ECN Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Direct market access with institutional pricing </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/ecn">View ECN Brokers</Link> </Button> </CardContent> </Card> <Card className="hover:shadow-lg transition-shadow cursor-pointer"> <CardContent className="p-6 text-center"> <h3 className="font-semibold text-lg mb-2">Low Spread Brokers</h3> <p className="text-sm text-muted-foreground mb-4"> Brokers offering the tightest spreads and best pricing </p> <Button variant="secondary" size="sm" asChild> <Link to="/forex-brokers/trading-types/low-spread">View Low Spread Brokers</Link> </Button> </CardContent> </Card> </div> </motion.div> </div> </section> </div> </> ) }