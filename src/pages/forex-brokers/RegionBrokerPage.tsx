import { SEO } from '@/components/SEO' import { motion } from 'framer-motion' import { Button } from '@/components/ui/button' import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card' import { Badge } from '@/components/ui/badge' import { ExternalLink, Star, CheckCircle, Globe, TrendingUp, Shield } from 'lucide-react' import { Link } from 'react-router-dom' import { BrokerCard, BrokerComparisonTable, BrokerFeatures, BrokerFAQ, BrokerRating } from '@/components/broker' import { IndiaBrokerComparisonTable } from '@/components/broker/IndiaBrokerComparisonTable' import { BrokerDetailSection } from '@/components/broker/BrokerDetailSection' import { RegionData } from '@/data/forex-brokers' import { FeatureIcons } from '@/components/broker' interface RegionBrokerPageProps { data: RegionData } export default function RegionBrokerPage({ data }: RegionBrokerPageProps) { const structuredData = { "@context": "https://schema.org", "@type": "FinancialService", "name": data.seo.title, "description": data.seo.description, "url": data.seo.canonical, "provider": { "@type": "Organization", "name": "BrokerAnalysis", "url": "https://brokeranalysis.com" }, "serviceType": "Forex Trading", "areaServed": { "@type": "Country", "name": data.name }, "aggregateRating": { "@type": "AggregateRating", "ratingValue": "4.5", "reviewCount": data.brokers.length.toString() }, "offers": { "@type": "Offer", "price": "0", "priceCurrency": "USD", "availability": "https://schema.org/InStock" } } const breadcrumbData = { "@context": "https://schema.org", "@type": "BreadcrumbList", "itemListElement": [ { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://brokeranalysis.com" }, { "@type": "ListItem", "position": 2, "name": "Forex Brokers", "item": "https://brokeranalysis.com/forex-brokers" }, { "@type": "ListItem", "position": 3, "name": data.title, "item": data.seo.canonical } ] } const faqData = { "@context": "https://schema.org", "@type": "FAQPage", "mainEntity": data.faqs.map(faq => ({ "@type": "Question", "name": faq.question, "acceptedAnswer": { "@type": "Answer", "text": faq.answer } })) } const brokerListData = { "@context": "https://schema.org", "@type": "ItemList", "name": `Top ${data.name} Forex Brokers`, "description": data.seo.description, "numberOfItems": data.brokers.length, "itemListElement": data.brokers.map((broker, index) => ({ "@type": "ListItem", "position": index + 1, "item": { "@type": "FinancialService", "name": broker.name, "description": broker.summary || broker.description, "url": broker.websiteUrl, "provider": { "@type": "Organization", "name": broker.name, "url": broker.websiteUrl }, "serviceType": "Forex Trading", "areaServed": { "@type": "Country", "name": data.name }, "offers": { "@type": "Offer", "price": broker.minDeposit, "priceCurrency": "USD", "availability": "https://schema.org/InStock" }, "aggregateRating": broker.rating ? { "@type": "AggregateRating", "ratingValue": broker.rating, "bestRating": broker.maxRating || 5, "reviewCount": 100 } : undefined } })) } const howToData = data.gettingStarted ? { "@context": "https://schema.org", "@type": "HowTo", "name": data.gettingStarted.title, "description": "Step-by-step guide to getting started with forex trading in " + data.name, "step": data.gettingStarted.steps.map((step, index) => ({ "@type": "HowToStep", "name": `Step ${index + 1}`, "text": step, "image": `https://brokeranalysis.com/images/forex-trading-step-${index + 1}.jpg` })) } : null return ( <> <SEO title={data.seo.title} description={data.seo.description} keywords={data.seo.keywords.join(', ')} canonicalUrl={data.seo.canonical} ogImage={`https://brokeranalysis.com/images/forex-brokers-regions/${data.id}.jpg`} structuredData={[ structuredData, breadcrumbData, faqData, brokerListData, ...(howToData ? [howToData] : []) ]} ogType="website" twitterCard="summary_large_image" /> <div className="min-h-screen bg-background"> {/* Hero Section */} <section className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} > <div className="text-center max-w-4xl mx-auto"> <Badge variant="secondary" className="mb-4 text-lg"> <Globe className="w-4 h-4 mr-2" /> {data.name} Region </Badge> <h1 className="text-4xl md:text-6xl font-bold mb-6 tracking-tighter"> {data.title} </h1> <p className="text-lg md:text-xl opacity-90 mb-8"> {data.subtitle} </p> <div className="flex items-center justify-center gap-2 text-sm opacity-75"> <Star className="w-4 h-4" /> Last Updated: {data.lastUpdated} </div> </div> </motion.div> </div> </section> {/* Introduction */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} className="max-w-4xl mx-auto" > <Card> <CardContent className="p-8"> <div className="prose prose-lg max-w-none"> {data.introduction.split('\n\n').map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> {/* Top Brokers Grid */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <div className="text-center mb-12"> <h2 className="text-3xl md:text-4xl font-bold mb-4"> Top {data.name} Forex Brokers </h2> <p className="text-lg text-muted-foreground max-w-2xl mx-auto"> Compare the best regulated forex brokers in {data.name} </p> </div> <div className="grid grid-cols-1 lg:grid-cols-2 gap-8"> {data.brokers.map((broker, index) => ( <motion.div key={broker.id} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: index * 0.1 }} > <BrokerDetailSection broker={broker} showNumber={true} number={index + 1} /> </motion.div> ))} </div> </motion.div> </div> </section> {/* Detailed Comparison Table */} {data.comparisonTable && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <IndiaBrokerComparisonTable title={data.comparisonTable.title} headers={data.comparisonTable.headers} rows={data.comparisonTable.rows} /> </motion.div> </div> </section> )} {/* Legal Information */} {data.legalInfo && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <Shield className="w-6 h-6" /> {data.legalInfo.title} </CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.legalInfo.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Tax Information */} {data.taxInfo && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl flex items-center gap-2"> <Shield className="w-6 h-6" /> {data.taxInfo.title} </CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.taxInfo.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Regulations */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.regulations.title}</CardTitle> </CardHeader> <CardContent> <p className="text-muted-foreground mb-6"> {data.regulations.description} </p> <div className="grid grid-cols-1 md:grid-cols-2 gap-6"> {data.regulations.points.map((point, index) => ( <div key={index} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> {/* Key Features */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerFeatures features={[ { icon: FeatureIcons.shield, title: 'Regulated & Secure', description: 'All brokers are strictly regulated with segregated client funds' }, { icon: FeatureIcons.star, title: 'Competitive Spreads', description: 'Low spreads from 0.1 pips on major currency pairs' }, { icon: FeatureIcons.globe, title: 'Multiple Platforms', description: 'Access to MetaTrader 4, proprietary platforms, and mobile apps' }, { icon: FeatureIcons.users, title: 'Excellent Support', description: '24/7 customer support in multiple languages' } ]} /> </motion.div> </div> </section> {/* How to Choose */} {data.howToChoose && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.howToChoose.title}</CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.howToChoose.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Getting Started */} {data.gettingStarted && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.gettingStarted.title}</CardTitle> </CardHeader> <CardContent> <div className="space-y-4"> {data.gettingStarted.steps.map((step, index) => ( <div key={index} className="flex items-start gap-3"> <div className="w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold flex-shrink-0 mt-0.5"> {index + 1} </div> <p className="text-muted-foreground leading-relaxed">{step}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Opening Account */} {data.openingAccount && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.openingAccount.title}</CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.openingAccount.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Trading Apps */} {data.tradingApps && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.tradingApps.title}</CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.tradingApps.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* PKR Trading */} {data.pkrTrading && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.pkrTrading.title}</CardTitle> </CardHeader> <CardContent> <div className="prose prose-lg max-w-none"> {data.pkrTrading.content.map((paragraph, index) => ( <p key={index} className="text-muted-foreground mb-4 leading-relaxed"> {paragraph} </p> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Risks */} {data.risks && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.risks.title}</CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> {data.risks.points.map((point, index) => ( <div key={index} className="flex items-start gap-3"> <div className="w-2 h-2 bg-orange-500 rounded-full mt-2 flex-shrink-0" /> <p className="text-sm text-muted-foreground">{point}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Avoiding Scams */} {data.avoidingScams && ( <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">{data.avoidingScams.title}</CardTitle> </CardHeader> <CardContent> <div className="space-y-3"> {data.avoidingScams.tips.map((tip, index) => ( <div key={index} className="flex items-start gap-3"> <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" /> <p className="text-muted-foreground leading-relaxed">{tip}</p> </div> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* Related Pages */} {data.relatedPages && data.relatedPages.length > 0 && ( <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card> <CardHeader> <CardTitle className="text-2xl">You might also be interested in reviewing the top brokers below:</CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3"> {data.relatedPages.map((page, index) => ( <Button key={index} variant="outline" className="justify-start h-auto p-3"> <Globe className="w-4 h-4 mr-2" /> {page} </Button> ))} </div> </CardContent> </Card> </motion.div> </div> </section> )} {/* FAQ */} <section className="py-16 bg-secondary/50"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <BrokerFAQ faqs={data.faqs} /> </motion.div> </div> </section> {/* Conclusion */} <section className="py-16"> <div className="container mx-auto px-4"> <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }} > <Card className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground"> <CardContent className="p-8"> <h2 className="text-2xl font-bold mb-6">{data.conclusion.title}</h2> <div className="space-y-4 mb-8"> {data.conclusion.content.map((paragraph, index) => ( <p key={index} className="opacity-90"> {paragraph} </p> ))} </div> <div className="flex flex-col sm:flex-row gap-4"> <Button size="lg" variant="secondary" asChild> <a href="/forex-brokers"> <TrendingUp className="w-4 h-4 mr-2" /> Compare All Brokers </a> </Button> <Button size="lg" variant="outline" asChild> <a href="/ai-match"> <ExternalLink className="w-4 h-4 mr-2" /> AI Broker Matcher </a> </Button> </div> </CardContent> </Card> </motion.div> </div> </section> </div> </> ) }