#!/usr/bin/env node /** * Simple test script to verify the SEO workflow system compiles and basic functionality works */ import { BrokerScrapingService } from '../src/lib/broker-scraping.ts'; import { KeywordResearchAgent } from '../src/lib/keyword-research.ts'; import { ContentPlanningAgent } from '../src/lib/content-planning.ts'; import { ContentGenerationAgent } from '../src/lib/content-generation.ts'; import { SEOOptimizationAgent } from '../src/lib/seo-optimization.ts'; import { QualityAssuranceAgent } from '../src/lib/quality-assurance.ts'; import AutomatedDeploymentService from '../src/lib/automated-deployment.ts'; import { WorkflowOrchestrator } from '../src/lib/workflow-orchestrator.ts'; console.log('üß™ Testing SEO Workflow System Imports...'); async function testImports() { try { console.log('‚úÖ BrokerScrapingService imported successfully'); console.log('‚úÖ KeywordResearchAgent imported successfully'); console.log('‚úÖ ContentPlanningAgent imported successfully'); console.log('‚úÖ ContentGenerationAgent imported successfully'); console.log('‚úÖ SEOOptimizationAgent imported successfully'); console.log('‚úÖ QualityAssuranceAgent imported successfully'); console.log('‚úÖ AutomatedDeploymentService imported successfully'); console.log('‚úÖ WorkflowOrchestrator imported successfully'); console.log('\nüöÄ Testing basic instantiation...'); // Test basic instantiation (without executing) const scrapingService = new BrokerScrapingService(); console.log('‚úÖ BrokerScrapingService instantiated'); const keywordAgent = new KeywordResearchAgent('test-project'); console.log('‚úÖ KeywordResearchAgent instantiated'); const planningAgent = new ContentPlanningAgent('test-project'); console.log('‚úÖ ContentPlanningAgent instantiated'); const generationAgent = new ContentGenerationAgent('test-project'); console.log('‚úÖ ContentGenerationAgent instantiated'); const seoAgent = new SEOOptimizationAgent('test-project'); console.log('‚úÖ SEOOptimizationAgent instantiated'); const qaAgent = new QualityAssuranceAgent('test-project'); console.log('‚úÖ QualityAssuranceAgent instantiated'); const deploymentService = new AutomatedDeploymentService({ outputDir: 'test-output', templateDir: 'test-templates', generateRoutes: false, updateSitemap: false, deployToProduction: false }); console.log('‚úÖ AutomatedDeploymentService instantiated'); const workflowConfig = { supabaseProjectId: 'test-project', brokerNames: ['Test Broker'], contentTypes: ['review', 'guide'] as ('review' | 'guide' | 'comparison' | 'tutorial' | 'news')[], qualityThreshold: 70, maxConcurrentProcesses: 1, enableDeployment: false, retryFailedSteps: false, notificationSettings: {} }; const orchestrator = new WorkflowOrchestrator(workflowConfig); console.log('‚úÖ WorkflowOrchestrator instantiated'); console.log('\nüéâ All imports and basic instantiation tests passed!'); } catch (error) { console.error('‚ùå Test failed:', error); process.exit(1); } } // Run the test testImports().catch(console.error);